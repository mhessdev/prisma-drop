"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/PrismaSchemaEditor.tsx":
/*!***********************************************!*\
  !*** ./src/components/PrismaSchemaEditor.tsx ***!
  \***********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.4.5_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.4.5_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dynamic */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.4.5_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/api/app-dynamic.js\");\n/* harmony import */ var _components_ui_button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/ui/button */ \"(app-pages-browser)/./src/components/ui/button.tsx\");\n/* harmony import */ var _components_ui_card__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/ui/card */ \"(app-pages-browser)/./src/components/ui/card.tsx\");\n/* harmony import */ var _barrel_optimize_names_Database_Loader2_PaintBucket_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! __barrel_optimize__?names=Database,Loader2,PaintBucket,RefreshCw!=!lucide-react */ \"(app-pages-browser)/./node_modules/.pnpm/lucide-react@0.394.0_react@18.3.1/node_modules/lucide-react/dist/esm/icons/refresh-cw.js\");\n/* harmony import */ var _barrel_optimize_names_Database_Loader2_PaintBucket_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! __barrel_optimize__?names=Database,Loader2,PaintBucket,RefreshCw!=!lucide-react */ \"(app-pages-browser)/./node_modules/.pnpm/lucide-react@0.394.0_react@18.3.1/node_modules/lucide-react/dist/esm/icons/database.js\");\n/* harmony import */ var _barrel_optimize_names_Database_Loader2_PaintBucket_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! __barrel_optimize__?names=Database,Loader2,PaintBucket,RefreshCw!=!lucide-react */ \"(app-pages-browser)/./node_modules/.pnpm/lucide-react@0.394.0_react@18.3.1/node_modules/lucide-react/dist/esm/icons/loader-circle.js\");\n/* harmony import */ var _barrel_optimize_names_Database_Loader2_PaintBucket_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! __barrel_optimize__?names=Database,Loader2,PaintBucket,RefreshCw!=!lucide-react */ \"(app-pages-browser)/./node_modules/.pnpm/lucide-react@0.394.0_react@18.3.1/node_modules/lucide-react/dist/esm/icons/paint-bucket.js\");\n/* harmony import */ var _components_ui_badge__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/components/ui/badge */ \"(app-pages-browser)/./src/components/ui/badge.tsx\");\n/* harmony import */ var _components_ui_use_toast__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/components/ui/use-toast */ \"(app-pages-browser)/./src/components/ui/use-toast.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n// Dynamically import Monaco Editor with no SSR\nconst Editor = (0,next_dynamic__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(()=>__webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_pnpm_monaco-editor_react_4_7_0_monaco-editor_0_52_2_react-dom-78c222\").then(__webpack_require__.bind(__webpack_require__, /*! @monaco-editor/react */ \"(app-pages-browser)/./node_modules/.pnpm/@monaco-editor+react@4.7.0_monaco-editor@0.52.2_react-dom@18.3.1_react@18.3.1/node_modules/@monaco-editor/react/dist/index.mjs\")), {\n    loadableGenerated: {\n        modules: [\n            \"src/components/PrismaSchemaEditor.tsx -> \" + \"@monaco-editor/react\"\n        ]\n    },\n    ssr: false,\n    loading: ()=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex items-center justify-center h-full bg-gray-900\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        width: \"48\",\n                        height: \"60\",\n                        viewBox: \"0 0 58 72\",\n                        fill: \"none\",\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        className: \"mx-auto mb-4 animate-pulse\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            fillRule: \"evenodd\",\n                            clipRule: \"evenodd\",\n                            d: \"M0.522473 45.0933C-0.184191 46.246 -0.173254 47.7004 0.550665 48.8423L13.6534 69.5114C14.5038 70.8529 16.1429 71.4646 17.6642 71.0082L55.4756 59.6648C57.539 59.0457 58.5772 56.7439 57.6753 54.7874L33.3684 2.06007C32.183 -0.511323 28.6095 -0.722394 27.1296 1.69157L0.522473 45.0933ZM32.7225 14.1141C32.2059 12.9187 30.4565 13.1028 30.2001 14.3796L20.842 60.9749C20.6447 61.9574 21.5646 62.7964 22.5248 62.5098L48.6494 54.7114C49.4119 54.4838 49.8047 53.6415 49.4891 52.9111L32.7225 14.1141Z\",\n                            fill: \"white\"\n                        }, void 0, false, {\n                            fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                            lineNumber: 18,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                        lineNumber: 17,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-sm text-gray-400\",\n                        children: \"Loading editor...\"\n                    }, void 0, false, {\n                        fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                        lineNumber: 20,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                lineNumber: 16,\n                columnNumber: 7\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n            lineNumber: 15,\n            columnNumber: 5\n        }, undefined)\n});\n_c = Editor;\nconst PrismaSchemaEditor = (param)=>{\n    let { value, onChange } = param;\n    _s();\n    const editorRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [isFormatting, setIsFormatting] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isPushing, setIsPushing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [lastPush, setLastPush] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isMounted, setIsMounted] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const { toast } = (0,_components_ui_use_toast__WEBPACK_IMPORTED_MODULE_6__.useToast)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"PrismaSchemaEditor.useEffect\": ()=>{\n            setIsMounted(true);\n        }\n    }[\"PrismaSchemaEditor.useEffect\"], []);\n    // Helper function to determine if we're inside a specific block\n    const isInsideBlock = (linesBefore, currentLine, blockType)=>{\n        let openBlocks = 0;\n        let inTargetBlock = false;\n        for (const line of linesBefore){\n            const trimmed = line.trim();\n            if (trimmed.startsWith(blockType)) {\n                inTargetBlock = true;\n                openBlocks = 1;\n            } else if (inTargetBlock) {\n                if (trimmed.includes('{')) openBlocks++;\n                if (trimmed.includes('}')) openBlocks--;\n                if (openBlocks === 0) inTargetBlock = false;\n            }\n        }\n        // Check current line too\n        const currentTrimmed = currentLine.trim();\n        if (currentTrimmed.includes('{') && inTargetBlock) openBlocks++;\n        if (currentTrimmed.includes('}') && inTargetBlock) openBlocks--;\n        return inTargetBlock && openBlocks > 0;\n    };\n    const handleEditorDidMount = (editor, monaco)=>{\n        editorRef.current = editor;\n        // Register Prisma language with comprehensive syntax highlighting\n        monaco.languages.register({\n            id: 'prisma'\n        });\n        // Enhanced Prisma language definition\n        monaco.languages.setMonarchTokensProvider('prisma', {\n            tokenizer: {\n                root: [\n                    // Comments\n                    [\n                        /\\/\\/.*$/,\n                        'comment'\n                    ],\n                    [\n                        /\\/\\*/,\n                        'comment',\n                        '@comment'\n                    ],\n                    // Keywords\n                    [\n                        /\\b(generator|datasource|model|enum|type|view)\\b/,\n                        'keyword.control'\n                    ],\n                    [\n                        /\\b(provider|url|relationMode|binaryTargets|previewFeatures|output|directUrl|shadowDatabaseUrl)\\b/,\n                        'keyword.other'\n                    ],\n                    // Data types\n                    [\n                        /\\b(String|Boolean|Int|BigInt|Float|Decimal|DateTime|Json|Bytes|Unsupported)\\b/,\n                        'type.primitive'\n                    ],\n                    // Attributes\n                    [\n                        /@@?[a-zA-Z_]\\w*/,\n                        'annotation'\n                    ],\n                    // String literals\n                    [\n                        /\"([^\"\\\\]|\\\\.)*$/,\n                        'string.invalid'\n                    ],\n                    [\n                        /\"/,\n                        'string',\n                        '@string_double'\n                    ],\n                    [\n                        /'([^'\\\\]|\\\\.)*$/,\n                        'string.invalid'\n                    ],\n                    [\n                        /'/,\n                        'string',\n                        '@string_single'\n                    ],\n                    // Numbers\n                    [\n                        /\\d*\\.\\d+([eE][\\-+]?\\d+)?/,\n                        'number.float'\n                    ],\n                    [\n                        /\\d+/,\n                        'number'\n                    ],\n                    // Environment variables\n                    [\n                        /env\\s*\\(\\s*\"[^\"]*\"\\s*\\)/,\n                        'variable.env'\n                    ],\n                    // Relations and field references\n                    [\n                        /\\b[A-Z][a-zA-Z0-9_]*\\b/,\n                        'type.model'\n                    ],\n                    [\n                        /\\b[a-z][a-zA-Z0-9_]*\\b/,\n                        'identifier'\n                    ],\n                    // Operators and punctuation\n                    [\n                        /[?]/,\n                        'operator.optional'\n                    ],\n                    [\n                        /\\[\\s*\\]/,\n                        'operator.array'\n                    ],\n                    [\n                        /[{}()\\[\\]]/,\n                        'delimiter.bracket'\n                    ],\n                    [\n                        /[,;]/,\n                        'delimiter'\n                    ],\n                    [\n                        /[:=]/,\n                        'operator'\n                    ]\n                ],\n                comment: [\n                    [\n                        /[^\\/*]+/,\n                        'comment'\n                    ],\n                    [\n                        /\\*\\//,\n                        'comment',\n                        '@pop'\n                    ],\n                    [\n                        /[\\/*]/,\n                        'comment'\n                    ]\n                ],\n                string_double: [\n                    [\n                        /[^\\\\\"]+/,\n                        'string'\n                    ],\n                    [\n                        /\\\\./,\n                        'string.escape'\n                    ],\n                    [\n                        /\"/,\n                        'string',\n                        '@pop'\n                    ]\n                ],\n                string_single: [\n                    [\n                        /[^\\\\']+/,\n                        'string'\n                    ],\n                    [\n                        /\\\\./,\n                        'string.escape'\n                    ],\n                    [\n                        /'/,\n                        'string',\n                        '@pop'\n                    ]\n                ]\n            }\n        });\n        // Prisma-branded dark theme\n        monaco.editor.defineTheme('prisma-dark', {\n            base: 'vs-dark',\n            inherit: true,\n            rules: [\n                {\n                    token: 'keyword.control',\n                    foreground: '7f9cf5',\n                    fontStyle: 'bold'\n                },\n                {\n                    token: 'keyword.other',\n                    foreground: '5a67d8'\n                },\n                {\n                    token: 'type.primitive',\n                    foreground: '71e8df',\n                    fontStyle: 'bold'\n                },\n                {\n                    token: 'type.model',\n                    foreground: '16a394'\n                },\n                {\n                    token: 'annotation',\n                    foreground: '667eea'\n                },\n                {\n                    token: 'string',\n                    foreground: '92efe6'\n                },\n                {\n                    token: 'string.escape',\n                    foreground: '04c8bb'\n                },\n                {\n                    token: 'comment',\n                    foreground: 'a0aec0',\n                    fontStyle: 'italic'\n                },\n                {\n                    token: 'number',\n                    foreground: '667eea'\n                },\n                {\n                    token: 'number.float',\n                    foreground: '667eea'\n                },\n                {\n                    token: 'variable.env',\n                    foreground: '16a394'\n                },\n                {\n                    token: 'operator.optional',\n                    foreground: 'e2e8f0'\n                },\n                {\n                    token: 'operator.array',\n                    foreground: 'e2e8f0'\n                },\n                {\n                    token: 'identifier',\n                    foreground: 'e2e8f0'\n                },\n                {\n                    token: 'delimiter.bracket',\n                    foreground: 'e2e8f0'\n                },\n                {\n                    token: 'delimiter',\n                    foreground: 'cbd5e0'\n                },\n                {\n                    token: 'operator',\n                    foreground: 'e2e8f0'\n                }\n            ],\n            colors: {\n                'editor.background': '#1a202c',\n                'editor.foreground': '#e2e8f0',\n                'editorLineNumber.foreground': '#718096',\n                'editorLineNumber.activeForeground': '#e2e8f0',\n                'editor.selectionBackground': '#2d3748',\n                'editor.selectionHighlightBackground': '#4a5568',\n                'editor.wordHighlightBackground': '#4a5568',\n                'editor.wordHighlightStrongBackground': '#2d3748',\n                'editorCursor.foreground': '#e2e8f0',\n                'editorBracketMatch.background': '#2d374850',\n                'editorBracketMatch.border': '#5a67d8',\n                'editor.lineHighlightBackground': '#2d3748',\n                'editorGutter.background': '#1a202c',\n                'editorWhitespace.foreground': '#4a5568',\n                'editorIndentGuide.background': '#4a5568',\n                'editorIndentGuide.activeBackground': '#718096',\n                'editorRuler.foreground': '#4a5568'\n            }\n        });\n        monaco.editor.setTheme('prisma-dark');\n        // Comprehensive completion provider for Prisma schema\n        const completionProvider = monaco.languages.registerCompletionItemProvider('prisma', {\n            triggerCharacters: [\n                '@',\n                '=',\n                '\"'\n            ],\n            provideCompletionItems: (model, position)=>{\n                const word = model.getWordUntilPosition(position);\n                const range = {\n                    startLineNumber: position.lineNumber,\n                    endLineNumber: position.lineNumber,\n                    startColumn: word.startColumn,\n                    endColumn: word.endColumn\n                };\n                const line = model.getLineContent(position.lineNumber);\n                const beforeCursor = line.substring(0, position.column - 1);\n                const allText = model.getValue();\n                const linesBefore = allText.split('\\n').slice(0, position.lineNumber - 1);\n                // Determine context\n                const isInGenerator = isInsideBlock(linesBefore, line, 'generator');\n                const isInDatasource = isInsideBlock(linesBefore, line, 'datasource');\n                const isInModel = isInsideBlock(linesBefore, line, 'model');\n                const isInEnum = isInsideBlock(linesBefore, line, 'enum');\n                const isAfterAt = beforeCursor.trim().endsWith('@');\n                const isFieldType = isInModel && !isAfterAt && /^\\s+\\w+\\s*$/.test(beforeCursor);\n                const isPropertyValue = /=\\s*$/.test(beforeCursor);\n                let suggestions = [];\n                // Block-level suggestions (only at top level)\n                if (!isInGenerator && !isInDatasource && !isInModel && !isInEnum && /^\\s*(gen|mod|dat|enu|$)/.test(line)) {\n                    suggestions.push({\n                        label: 'generator',\n                        kind: monaco.languages.CompletionItemKind.Class,\n                        insertText: [\n                            'generator ${1:client} {',\n                            '  provider = \"prisma-client-js\"',\n                            '  $0',\n                            '}'\n                        ].join('\\n'),\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                        documentation: 'Define a generator',\n                        range,\n                        sortText: '1generator'\n                    }, {\n                        label: 'model',\n                        kind: monaco.languages.CompletionItemKind.Class,\n                        insertText: [\n                            'model ${1:User} {',\n                            '  id        String   @id @default(cuid())',\n                            '  email     String   @unique',\n                            '  name      String?',\n                            '  createdAt DateTime @default(now())',\n                            '  updatedAt DateTime @updatedAt',\n                            '  $0',\n                            '}'\n                        ].join('\\n'),\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                        documentation: 'Create a new data model',\n                        range,\n                        sortText: '1model'\n                    }, {\n                        label: 'datasource',\n                        kind: monaco.languages.CompletionItemKind.Module,\n                        insertText: [\n                            'datasource ${1:db} {',\n                            '  provider = \"${2:postgresql}\"',\n                            '  url      = env(\"${3:DATABASE_URL}\")',\n                            '  $0',\n                            '}'\n                        ].join('\\n'),\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                        documentation: 'Define a datasource',\n                        range,\n                        sortText: '1datasource'\n                    }, {\n                        label: 'enum',\n                        kind: monaco.languages.CompletionItemKind.Enum,\n                        insertText: [\n                            'enum ${1:Status} {',\n                            '  ${2:ACTIVE}',\n                            '  ${3:INACTIVE}',\n                            '  $0',\n                            '}'\n                        ].join('\\n'),\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                        documentation: 'Create an enumeration',\n                        range,\n                        sortText: '1enum'\n                    });\n                }\n                // Generator properties\n                if (isInGenerator && !isAfterAt) {\n                    if (isPropertyValue) {\n                        // Provider values\n                        if (beforeCursor.includes('provider')) {\n                            suggestions.push({\n                                label: '\"prisma-client-js\"',\n                                kind: monaco.languages.CompletionItemKind.Value,\n                                insertText: '\"prisma-client-js\"',\n                                range\n                            }, {\n                                label: '\"prisma-client\"',\n                                kind: monaco.languages.CompletionItemKind.Value,\n                                insertText: '\"prisma-client\"',\n                                range\n                            });\n                        } else if (beforeCursor.includes('engineType')) {\n                            suggestions.push({\n                                label: '\"library\"',\n                                kind: monaco.languages.CompletionItemKind.Value,\n                                insertText: '\"library\"',\n                                range\n                            }, {\n                                label: '\"binary\"',\n                                kind: monaco.languages.CompletionItemKind.Value,\n                                insertText: '\"binary\"',\n                                range\n                            });\n                        } else if (beforeCursor.includes('moduleFormat')) {\n                            suggestions.push({\n                                label: '\"cjs\"',\n                                kind: monaco.languages.CompletionItemKind.Value,\n                                insertText: '\"cjs\"',\n                                range\n                            }, {\n                                label: '\"esm\"',\n                                kind: monaco.languages.CompletionItemKind.Value,\n                                insertText: '\"esm\"',\n                                range\n                            });\n                        }\n                    } else {\n                        // Generator property names\n                        suggestions.push({\n                            label: 'provider',\n                            kind: monaco.languages.CompletionItemKind.Property,\n                            insertText: 'provider = ',\n                            range,\n                            sortText: '1provider'\n                        }, {\n                            label: 'output',\n                            kind: monaco.languages.CompletionItemKind.Property,\n                            insertText: 'output = \"${1:./generated/client}\"',\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                            range,\n                            sortText: '2output'\n                        }, {\n                            label: 'previewFeatures',\n                            kind: monaco.languages.CompletionItemKind.Property,\n                            insertText: 'previewFeatures = [${1:\"feature\"}]',\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                            range,\n                            sortText: '3previewFeatures'\n                        }, {\n                            label: 'engineType',\n                            kind: monaco.languages.CompletionItemKind.Property,\n                            insertText: 'engineType = \"${1:library}\"',\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                            range,\n                            sortText: '4engineType'\n                        }, {\n                            label: 'binaryTargets',\n                            kind: monaco.languages.CompletionItemKind.Property,\n                            insertText: 'binaryTargets = [${1:\"native\"}]',\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                            range,\n                            sortText: '5binaryTargets'\n                        }, {\n                            label: 'moduleFormat',\n                            kind: monaco.languages.CompletionItemKind.Property,\n                            insertText: 'moduleFormat = \"${1:cjs}\"',\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                            range,\n                            sortText: '6moduleFormat'\n                        });\n                    }\n                }\n                // Datasource properties\n                if (isInDatasource && !isAfterAt) {\n                    if (isPropertyValue) {\n                        if (beforeCursor.includes('provider')) {\n                            suggestions.push({\n                                label: '\"postgresql\"',\n                                kind: monaco.languages.CompletionItemKind.Value,\n                                insertText: '\"postgresql\"',\n                                range\n                            }, {\n                                label: '\"mysql\"',\n                                kind: monaco.languages.CompletionItemKind.Value,\n                                insertText: '\"mysql\"',\n                                range\n                            }, {\n                                label: '\"sqlite\"',\n                                kind: monaco.languages.CompletionItemKind.Value,\n                                insertText: '\"sqlite\"',\n                                range\n                            }, {\n                                label: '\"sqlserver\"',\n                                kind: monaco.languages.CompletionItemKind.Value,\n                                insertText: '\"sqlserver\"',\n                                range\n                            }, {\n                                label: '\"mongodb\"',\n                                kind: monaco.languages.CompletionItemKind.Value,\n                                insertText: '\"mongodb\"',\n                                range\n                            }, {\n                                label: '\"cockroachdb\"',\n                                kind: monaco.languages.CompletionItemKind.Value,\n                                insertText: '\"cockroachdb\"',\n                                range\n                            });\n                        }\n                    } else {\n                        suggestions.push({\n                            label: 'provider',\n                            kind: monaco.languages.CompletionItemKind.Property,\n                            insertText: 'provider = ',\n                            range\n                        }, {\n                            label: 'url',\n                            kind: monaco.languages.CompletionItemKind.Property,\n                            insertText: 'url = env(\"${1:DATABASE_URL}\")',\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                            range\n                        });\n                    }\n                }\n                // Field types in models\n                if (isFieldType) {\n                    suggestions.push(...[\n                        'String',\n                        'Boolean',\n                        'Int',\n                        'BigInt',\n                        'Float',\n                        'Decimal',\n                        'DateTime',\n                        'Json',\n                        'Bytes'\n                    ].map((type)=>({\n                            label: type,\n                            kind: monaco.languages.CompletionItemKind.TypeParameter,\n                            insertText: type,\n                            documentation: \"\".concat(type, \" field type\"),\n                            range,\n                            sortText: \"1\".concat(type)\n                        })));\n                }\n                // Attributes (triggered by @)\n                if (isAfterAt || isInModel && beforeCursor.trim().endsWith('@')) {\n                    suggestions.push(// Field attributes\n                    {\n                        label: '@id',\n                        kind: monaco.languages.CompletionItemKind.Property,\n                        insertText: '@id',\n                        documentation: 'Defines the primary key',\n                        range,\n                        sortText: '1@id'\n                    }, {\n                        label: '@unique',\n                        kind: monaco.languages.CompletionItemKind.Property,\n                        insertText: '@unique',\n                        documentation: 'Defines a unique constraint',\n                        range,\n                        sortText: '1@unique'\n                    }, {\n                        label: '@default',\n                        kind: monaco.languages.CompletionItemKind.Property,\n                        insertText: '@default(${1:value})',\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                        documentation: 'Sets a default value',\n                        range,\n                        sortText: '1@default'\n                    }, {\n                        label: '@relation',\n                        kind: monaco.languages.CompletionItemKind.Property,\n                        insertText: '@relation(fields: [${1:fieldName}], references: [${2:id}])',\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                        documentation: 'Defines a relation between models',\n                        range,\n                        sortText: '1@relation'\n                    }, {\n                        label: '@updatedAt',\n                        kind: monaco.languages.CompletionItemKind.Property,\n                        insertText: '@updatedAt',\n                        documentation: 'Automatically sets the field to now() when the record is updated',\n                        range,\n                        sortText: '1@updatedAt'\n                    }, {\n                        label: '@map',\n                        kind: monaco.languages.CompletionItemKind.Property,\n                        insertText: '@map(\"${1:column_name}\")',\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                        documentation: 'Maps the field to a specific database column',\n                        range,\n                        sortText: '1@map'\n                    }, // Default value functions\n                    {\n                        label: 'autoincrement()',\n                        kind: monaco.languages.CompletionItemKind.Function,\n                        insertText: 'autoincrement()',\n                        documentation: 'Creates a sequence of integers in the underlying database',\n                        range,\n                        sortText: '4autoincrement'\n                    }, {\n                        label: 'cuid()',\n                        kind: monaco.languages.CompletionItemKind.Function,\n                        insertText: 'cuid()',\n                        documentation: 'Generates a globally unique identifier',\n                        range,\n                        sortText: '4cuid'\n                    }, {\n                        label: 'uuid()',\n                        kind: monaco.languages.CompletionItemKind.Function,\n                        insertText: 'uuid()',\n                        documentation: 'Generates a globally unique identifier',\n                        range,\n                        sortText: '4uuid'\n                    }, {\n                        label: 'now()',\n                        kind: monaco.languages.CompletionItemKind.Function,\n                        insertText: 'now()',\n                        documentation: 'Sets a timestamp of the time when a record is created',\n                        range,\n                        sortText: '4now'\n                    }, // Common field snippets\n                    {\n                        label: 'id (Int autoincrement)',\n                        kind: monaco.languages.CompletionItemKind.Snippet,\n                        insertText: 'id ${1:Int} @id @default(autoincrement())',\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                        documentation: 'Integer ID field with auto-increment',\n                        range,\n                        sortText: '5id-int'\n                    }, {\n                        label: 'id (String cuid)',\n                        kind: monaco.languages.CompletionItemKind.Snippet,\n                        insertText: 'id ${1:String} @id @default(cuid())',\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                        documentation: 'String ID field with CUID',\n                        range,\n                        sortText: '5id-string'\n                    }, {\n                        label: 'email field',\n                        kind: monaco.languages.CompletionItemKind.Snippet,\n                        insertText: 'email ${1:String} @unique',\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                        documentation: 'Unique email field',\n                        range,\n                        sortText: '5email'\n                    }, {\n                        label: 'timestamps',\n                        kind: monaco.languages.CompletionItemKind.Snippet,\n                        insertText: 'createdAt DateTime @default(now())\\n  updatedAt DateTime @updatedAt',\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                        documentation: 'Standard timestamp fields',\n                        range,\n                        sortText: '5timestamps'\n                    }, {\n                        label: 'relation field',\n                        kind: monaco.languages.CompletionItemKind.Snippet,\n                        insertText: '${1:author}   ${2:User} @relation(fields: [${3:authorId}], references: [${4:id}])\\n  ${3:authorId} ${5:String}',\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                        documentation: 'Relation field with foreign key',\n                        range,\n                        sortText: '5relation'\n                    });\n                }\n                return {\n                    suggestions\n                };\n            }\n        });\n        // Enhanced hover provider\n        const hoverProvider = monaco.languages.registerHoverProvider('prisma', {\n            provideHover: (model, position)=>{\n                const word = model.getWordAtPosition(position);\n                if (!word) return;\n                const documentation = {\n                    'model': '**Model** - Represents an entity in your application domain and maps to a table (relational databases) or collection (MongoDB)',\n                    'generator': '**Generator** - Determines which assets are created from your Prisma schema',\n                    'datasource': '**Datasource** - Tells Prisma what database you use and how to connect to it',\n                    'enum': '**Enum** - Defines a list of possible values for a field',\n                    '@id': '**@id** - Defines a single-field ID on the model',\n                    '@unique': '**@unique** - Defines a unique constraint for this field',\n                    '@default': '**@default** - Defines a default value for this field',\n                    '@relation': '**@relation** - Defines meta information about the relation',\n                    '@updatedAt': '**@updatedAt** - Automatically stores the time when a record was last updated',\n                    '@map': '**@map** - Maps a field name or enum value from the Prisma schema to a column or document field name in the database',\n                    'String': '**String** - Variable length text',\n                    'Boolean': '**Boolean** - True or false value',\n                    'Int': '**Int** - 32-bit signed integer',\n                    'BigInt': '**BigInt** - 64-bit signed integer',\n                    'Float': '**Float** - Floating point number',\n                    'Decimal': '**Decimal** - High precision floating point number',\n                    'DateTime': '**DateTime** - Timestamp',\n                    'Json': '**Json** - JSON object',\n                    'Bytes': '**Bytes** - Raw bytes (binary data)',\n                    'autoincrement': '**autoincrement()** - Creates a sequence of integers in the underlying database',\n                    'cuid': '**cuid()** - Generates a globally unique identifier based on the cuid spec',\n                    'uuid': '**uuid()** - Generates a globally unique identifier based on the UUID spec',\n                    'now': '**now()** - Sets a timestamp of the time when a record is created'\n                };\n                if (documentation[word.word]) {\n                    return {\n                        range: new monaco.Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn),\n                        contents: [\n                            {\n                                value: documentation[word.word]\n                            }\n                        ]\n                    };\n                }\n            }\n        });\n        // Removed auto-trigger suggestions to prevent duplicate suggestions\n        // Add document formatting provider\n        monaco.languages.registerDocumentFormattingEditProvider('prisma', {\n            provideDocumentFormattingEdits: (model)=>{\n                const value = model.getValue();\n                // Simple Prisma formatting rules\n                const formatted = value.split('\\n').map((line)=>{\n                    // Remove trailing whitespace\n                    line = line.trimEnd();\n                    // Handle indentation for model contents\n                    if (line.trim().match(/^(id|email|name|title|content|published|author|authorId|createdAt|updatedAt|provider|url)\\s+/)) {\n                        // Field definitions should be indented with 2 spaces\n                        const trimmed = line.trim();\n                        return \"  \".concat(trimmed);\n                    }\n                    // Block-level keywords should not be indented\n                    if (line.trim().match(/^(model|generator|datasource|enum)\\s+/)) {\n                        return line.trim();\n                    }\n                    // Closing braces should not be indented\n                    if (line.trim() === '}') {\n                        return '}';\n                    }\n                    return line;\n                }).join('\\n');\n                return [\n                    {\n                        range: model.getFullModelRange(),\n                        text: formatted\n                    }\n                ];\n            }\n        });\n        // Add Prisma-specific commands\n        editor.addAction({\n            id: 'prisma.format',\n            label: 'Format Prisma Schema',\n            keybindings: [\n                monaco.KeyMod.Shift | monaco.KeyMod.Alt | monaco.KeyCode.KeyF\n            ],\n            run: ()=>{\n                handleFormat();\n            }\n        });\n    };\n    const handleFormat = async ()=>{\n        if (!editorRef.current) return;\n        setIsFormatting(true);\n        try {\n            const currentValue = editorRef.current.getValue();\n            // Call the official Prisma formatter via API\n            const response = await fetch('/api/format-schema', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    schema: currentValue\n                })\n            });\n            if (response.ok) {\n                const { formattedSchema } = await response.json();\n                editorRef.current.setValue(formattedSchema);\n                onChange(formattedSchema);\n                // Show success toast\n                toast({\n                    title: \"Schema formatted successfully!\",\n                    description: \"Your schema has been formatted using Prisma's official formatter\"\n                });\n            } else {\n                // Fallback to Monaco's document formatting\n                await editorRef.current.trigger('format', 'editor.action.formatDocument', {});\n                // Show fallback warning\n                toast({\n                    title: \"Schema formatted (fallback)\",\n                    description: \"Used Monaco editor formatting as Prisma formatter was unavailable\"\n                });\n            }\n        } catch (error) {\n            console.error('Error formatting:', error);\n            // Fallback to Monaco's document formatting\n            try {\n                await editorRef.current.trigger('format', 'editor.action.formatDocument', {});\n                // Show fallback warning\n                toast({\n                    title: \"Schema formatted (fallback)\",\n                    description: \"Used Monaco editor formatting due to an error with Prisma formatter\"\n                });\n            } catch (fallbackError) {\n                console.error('Fallback formatting failed:', fallbackError);\n                // Show error toast\n                toast({\n                    title: \"Formatting failed\",\n                    description: \"Unable to format schema. Please check your syntax.\",\n                    variant: \"destructive\"\n                });\n            }\n        } finally{\n            setIsFormatting(false);\n        }\n    };\n    const handlePushToDb = async ()=>{\n        setIsPushing(true);\n        try {\n            // Simulate push to database\n            await new Promise((resolve)=>setTimeout(resolve, 2000));\n            setLastPush(new Date());\n        } catch (error) {\n            console.error('Error pushing to database:', error);\n        } finally{\n            setIsPushing(false);\n        }\n    };\n    if (!isMounted) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex items-center justify-center h-full bg-gray-900\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        width: \"48\",\n                        height: \"60\",\n                        viewBox: \"0 0 58 72\",\n                        fill: \"none\",\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        className: \"mx-auto mb-4 animate-pulse\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            fillRule: \"evenodd\",\n                            clipRule: \"evenodd\",\n                            d: \"M0.522473 45.0933C-0.184191 46.246 -0.173254 47.7004 0.550665 48.8423L13.6534 69.5114C14.5038 70.8529 16.1429 71.4646 17.6642 71.0082L55.4756 59.6648C57.539 59.0457 58.5772 56.7439 57.6753 54.7874L33.3684 2.06007C32.183 -0.511323 28.6095 -0.722394 27.1296 1.69157L0.522473 45.0933ZM32.7225 14.1141C32.2059 12.9187 30.4565 13.1028 30.2001 14.3796L20.842 60.9749C20.6447 61.9574 21.5646 62.7964 22.5248 62.5098L48.6494 54.7114C49.4119 54.4838 49.8047 53.6415 49.4891 52.9111L32.7225 14.1141Z\",\n                            fill: \"white\"\n                        }, void 0, false, {\n                            fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                            lineNumber: 674,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                        lineNumber: 673,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-sm text-gray-400\",\n                        children: \"Initializing editor...\"\n                    }, void 0, false, {\n                        fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                        lineNumber: 676,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                lineNumber: 672,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n            lineNumber: 671,\n            columnNumber: 7\n        }, undefined);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex h-full bg-gray-900\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_card__WEBPACK_IMPORTED_MODULE_4__.Card, {\n                className: \"w-16 border-r border-gray-700 bg-gray-800 rounded-none flex flex-col items-center py-4 space-y-3\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_3__.Button, {\n                        variant: \"ghost\",\n                        size: \"sm\",\n                        onClick: handlePushToDb,\n                        disabled: isPushing,\n                        className: \"w-12 h-12 p-0 flex flex-col items-center justify-center text-gray-300 hover:text-white hover:bg-gray-700\",\n                        title: \"Push schema to database (prisma db push)\",\n                        children: [\n                            isPushing ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Database_Loader2_PaintBucket_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                                className: \"h-4 w-4 animate-spin\"\n                            }, void 0, false, {\n                                fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                                lineNumber: 695,\n                                columnNumber: 13\n                            }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Database_Loader2_PaintBucket_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                                className: \"h-4 w-4\"\n                            }, void 0, false, {\n                                fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                                lineNumber: 697,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"text-xs mt-1\",\n                                children: \"Push\"\n                            }, void 0, false, {\n                                fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                                lineNumber: 699,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                        lineNumber: 686,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_3__.Button, {\n                        variant: \"ghost\",\n                        size: \"sm\",\n                        onClick: handleFormat,\n                        disabled: isFormatting,\n                        className: \"w-12 h-12 p-0 flex flex-col items-center justify-center text-gray-300 hover:text-white hover:bg-gray-700 \".concat(isFormatting ? 'bg-indigo-900/50 text-indigo-300' : ''),\n                        title: isFormatting ? \"Formatting schema...\" : \"Format schema (Shift+Alt+F)\",\n                        children: [\n                            isFormatting ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Database_Loader2_PaintBucket_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                                className: \"h-4 w-4 animate-spin\"\n                            }, void 0, false, {\n                                fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                                lineNumber: 713,\n                                columnNumber: 13\n                            }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Database_Loader2_PaintBucket_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                                className: \"h-4 w-4\"\n                            }, void 0, false, {\n                                fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                                lineNumber: 715,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"text-xs mt-1\",\n                                children: isFormatting ? \"...\" : \"Format\"\n                            }, void 0, false, {\n                                fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                                lineNumber: 717,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                        lineNumber: 702,\n                        columnNumber: 9\n                    }, undefined),\n                    lastPush && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mt-4 flex flex-col items-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_badge__WEBPACK_IMPORTED_MODULE_5__.Badge, {\n                                variant: \"secondary\",\n                                className: \"text-xs rotate-90 whitespace-nowrap bg-gray-700 text-gray-300\",\n                                children: \"Last push\"\n                            }, void 0, false, {\n                                fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                                lineNumber: 722,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"text-xs text-gray-400 mt-2 transform rotate-90 whitespace-nowrap\",\n                                children: lastPush.toLocaleTimeString()\n                            }, void 0, false, {\n                                fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                                lineNumber: 725,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                        lineNumber: 721,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                lineNumber: 685,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-1 flex flex-col\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex-1\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Editor, {\n                        height: \"100%\",\n                        language: \"prisma\",\n                        value: value,\n                        onChange: (newValue)=>onChange(newValue || ''),\n                        onMount: handleEditorDidMount,\n                        theme: \"prisma-dark\",\n                        options: {\n                            minimap: {\n                                enabled: true\n                            },\n                            fontSize: 14,\n                            fontFamily: \"'JetBrains Mono', 'Fira Code', 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace\",\n                            fontLigatures: true,\n                            lineNumbers: 'on',\n                            wordWrap: 'on',\n                            automaticLayout: true,\n                            scrollBeyondLastLine: false,\n                            padding: {\n                                top: 16,\n                                bottom: 16\n                            },\n                            renderWhitespace: 'selection',\n                            bracketPairColorization: {\n                                enabled: true\n                            },\n                            guides: {\n                                bracketPairs: true,\n                                indentation: true\n                            },\n                            suggest: {\n                                showKeywords: true,\n                                showSnippets: true,\n                                showFunctions: true,\n                                showFields: true,\n                                showVariables: true,\n                                showClasses: true,\n                                showModules: true,\n                                showProperties: true,\n                                showEnums: true,\n                                showEnumMembers: true,\n                                showTypeParameters: true,\n                                snippetsPreventQuickSuggestions: false,\n                                filterGraceful: true,\n                                localityBonus: true\n                            },\n                            quickSuggestions: {\n                                other: 'inline',\n                                comments: false,\n                                strings: false\n                            },\n                            quickSuggestionsDelay: 300,\n                            parameterHints: {\n                                enabled: true,\n                                cycle: true\n                            },\n                            autoClosingBrackets: 'always',\n                            autoClosingQuotes: 'always',\n                            autoIndent: 'full',\n                            acceptSuggestionOnCommitCharacter: true,\n                            acceptSuggestionOnEnter: 'smart',\n                            tabCompletion: 'on',\n                            wordBasedSuggestions: 'allDocuments',\n                            folding: true,\n                            foldingStrategy: 'indentation',\n                            showFoldingControls: 'always',\n                            matchBrackets: 'always',\n                            selectionHighlight: true,\n                            occurrencesHighlight: 'singleFile',\n                            cursorBlinking: 'blink',\n                            cursorStyle: 'line',\n                            smoothScrolling: true,\n                            tabSize: 2,\n                            insertSpaces: true,\n                            formatOnPaste: true,\n                            formatOnType: true,\n                            multiCursorModifier: 'ctrlCmd',\n                            mouseWheelZoom: true,\n                            linkedEditing: true,\n                            codeLens: true\n                        }\n                    }, void 0, false, {\n                        fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                        lineNumber: 735,\n                        columnNumber: 11\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                    lineNumber: 734,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                lineNumber: 733,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n        lineNumber: 683,\n        columnNumber: 5\n    }, undefined);\n};\n_s(PrismaSchemaEditor, \"FEMEXXGB3vaRnclqPL1RQmbEkBY=\", false, function() {\n    return [\n        _components_ui_use_toast__WEBPACK_IMPORTED_MODULE_6__.useToast\n    ];\n});\n_c1 = PrismaSchemaEditor;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PrismaSchemaEditor);\nvar _c, _c1;\n$RefreshReg$(_c, \"Editor\");\n$RefreshReg$(_c1, \"PrismaSchemaEditor\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/PrismaSchemaEditor.tsx\n"));

/***/ })

});