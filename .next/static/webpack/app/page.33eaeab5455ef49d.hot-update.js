"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/PrismaSchemaEditor.tsx":
/*!***********************************************!*\
  !*** ./src/components/PrismaSchemaEditor.tsx ***!
  \***********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.4.5_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.4.5_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dynamic */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.4.5_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/api/app-dynamic.js\");\n/* harmony import */ var _components_ui_button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/ui/button */ \"(app-pages-browser)/./src/components/ui/button.tsx\");\n/* harmony import */ var _components_ui_card__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/ui/card */ \"(app-pages-browser)/./src/components/ui/card.tsx\");\n/* harmony import */ var _barrel_optimize_names_Database_Loader2_PaintBucket_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! __barrel_optimize__?names=Database,Loader2,PaintBucket,RefreshCw!=!lucide-react */ \"(app-pages-browser)/./node_modules/.pnpm/lucide-react@0.394.0_react@18.3.1/node_modules/lucide-react/dist/esm/icons/refresh-cw.js\");\n/* harmony import */ var _barrel_optimize_names_Database_Loader2_PaintBucket_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! __barrel_optimize__?names=Database,Loader2,PaintBucket,RefreshCw!=!lucide-react */ \"(app-pages-browser)/./node_modules/.pnpm/lucide-react@0.394.0_react@18.3.1/node_modules/lucide-react/dist/esm/icons/database.js\");\n/* harmony import */ var _barrel_optimize_names_Database_Loader2_PaintBucket_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! __barrel_optimize__?names=Database,Loader2,PaintBucket,RefreshCw!=!lucide-react */ \"(app-pages-browser)/./node_modules/.pnpm/lucide-react@0.394.0_react@18.3.1/node_modules/lucide-react/dist/esm/icons/loader-circle.js\");\n/* harmony import */ var _barrel_optimize_names_Database_Loader2_PaintBucket_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! __barrel_optimize__?names=Database,Loader2,PaintBucket,RefreshCw!=!lucide-react */ \"(app-pages-browser)/./node_modules/.pnpm/lucide-react@0.394.0_react@18.3.1/node_modules/lucide-react/dist/esm/icons/paint-bucket.js\");\n/* harmony import */ var _components_ui_badge__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/components/ui/badge */ \"(app-pages-browser)/./src/components/ui/badge.tsx\");\n/* harmony import */ var _components_ui_use_toast__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/components/ui/use-toast */ \"(app-pages-browser)/./src/components/ui/use-toast.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n// Dynamically import Monaco Editor with no SSR\nconst Editor = (0,next_dynamic__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(()=>__webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_pnpm_monaco-editor_react_4_7_0_monaco-editor_0_52_2_react-dom-78c222\").then(__webpack_require__.bind(__webpack_require__, /*! @monaco-editor/react */ \"(app-pages-browser)/./node_modules/.pnpm/@monaco-editor+react@4.7.0_monaco-editor@0.52.2_react-dom@18.3.1_react@18.3.1/node_modules/@monaco-editor/react/dist/index.mjs\")), {\n    loadableGenerated: {\n        modules: [\n            \"src/components/PrismaSchemaEditor.tsx -> \" + \"@monaco-editor/react\"\n        ]\n    },\n    ssr: false,\n    loading: ()=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex items-center justify-center h-full bg-gray-900\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        width: \"48\",\n                        height: \"60\",\n                        viewBox: \"0 0 58 72\",\n                        fill: \"none\",\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        className: \"mx-auto mb-4 animate-pulse\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            fillRule: \"evenodd\",\n                            clipRule: \"evenodd\",\n                            d: \"M0.522473 45.0933C-0.184191 46.246 -0.173254 47.7004 0.550665 48.8423L13.6534 69.5114C14.5038 70.8529 16.1429 71.4646 17.6642 71.0082L55.4756 59.6648C57.539 59.0457 58.5772 56.7439 57.6753 54.7874L33.3684 2.06007C32.183 -0.511323 28.6095 -0.722394 27.1296 1.69157L0.522473 45.0933ZM32.7225 14.1141C32.2059 12.9187 30.4565 13.1028 30.2001 14.3796L20.842 60.9749C20.6447 61.9574 21.5646 62.7964 22.5248 62.5098L48.6494 54.7114C49.4119 54.4838 49.8047 53.6415 49.4891 52.9111L32.7225 14.1141Z\",\n                            fill: \"white\"\n                        }, void 0, false, {\n                            fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                            lineNumber: 18,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                        lineNumber: 17,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-sm text-gray-400\",\n                        children: \"Loading editor...\"\n                    }, void 0, false, {\n                        fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                        lineNumber: 20,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                lineNumber: 16,\n                columnNumber: 7\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n            lineNumber: 15,\n            columnNumber: 5\n        }, undefined)\n});\n_c = Editor;\nconst PrismaSchemaEditor = (param)=>{\n    let { value, onChange } = param;\n    _s();\n    const editorRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [isFormatting, setIsFormatting] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isPushing, setIsPushing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [lastPush, setLastPush] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isMounted, setIsMounted] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [aiEnabled, setAiEnabled] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [cachedSuggestions, setCachedSuggestions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const fetchingIntervalRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const timeoutRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const { toast } = (0,_components_ui_use_toast__WEBPACK_IMPORTED_MODULE_6__.useToast)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"PrismaSchemaEditor.useEffect\": ()=>{\n            setIsMounted(true);\n        }\n    }[\"PrismaSchemaEditor.useEffect\"], []);\n    // Helper function to determine if we're inside a specific block\n    const isInsideBlock = (linesBefore, currentLine, blockType)=>{\n        let openBlocks = 0;\n        let inTargetBlock = false;\n        for (const line of linesBefore){\n            const trimmed = line.trim();\n            if (trimmed.startsWith(blockType)) {\n                inTargetBlock = true;\n                openBlocks = 1;\n            } else if (inTargetBlock) {\n                if (trimmed.includes('{')) openBlocks++;\n                if (trimmed.includes('}')) openBlocks--;\n                if (openBlocks === 0) inTargetBlock = false;\n            }\n        }\n        // Check current line too\n        const currentTrimmed = currentLine.trim();\n        if (currentTrimmed.includes('{') && inTargetBlock) openBlocks++;\n        if (currentTrimmed.includes('}') && inTargetBlock) openBlocks--;\n        return inTargetBlock && openBlocks > 0;\n    };\n    const handleEditorDidMount = (editor, monaco)=>{\n        editorRef.current = editor;\n        // Register Prisma language with comprehensive syntax highlighting\n        monaco.languages.register({\n            id: 'prisma'\n        });\n        // Enhanced Prisma language definition\n        monaco.languages.setMonarchTokensProvider('prisma', {\n            tokenizer: {\n                root: [\n                    // Comments\n                    [\n                        /\\/\\/.*$/,\n                        'comment'\n                    ],\n                    [\n                        /\\/\\*/,\n                        'comment',\n                        '@comment'\n                    ],\n                    // Keywords\n                    [\n                        /\\b(generator|datasource|model|enum|type|view)\\b/,\n                        'keyword.control'\n                    ],\n                    [\n                        /\\b(provider|url|relationMode|binaryTargets|previewFeatures|output|directUrl|shadowDatabaseUrl)\\b/,\n                        'keyword.other'\n                    ],\n                    // Data types\n                    [\n                        /\\b(String|Boolean|Int|BigInt|Float|Decimal|DateTime|Json|Bytes|Unsupported)\\b/,\n                        'type.primitive'\n                    ],\n                    // Attributes\n                    [\n                        /@@?[a-zA-Z_]\\w*/,\n                        'annotation'\n                    ],\n                    // String literals\n                    [\n                        /\"([^\"\\\\]|\\\\.)*$/,\n                        'string.invalid'\n                    ],\n                    [\n                        /\"/,\n                        'string',\n                        '@string_double'\n                    ],\n                    [\n                        /'([^'\\\\]|\\\\.)*$/,\n                        'string.invalid'\n                    ],\n                    [\n                        /'/,\n                        'string',\n                        '@string_single'\n                    ],\n                    // Numbers\n                    [\n                        /\\d*\\.\\d+([eE][\\-+]?\\d+)?/,\n                        'number.float'\n                    ],\n                    [\n                        /\\d+/,\n                        'number'\n                    ],\n                    // Environment variables\n                    [\n                        /env\\s*\\(\\s*\"[^\"]*\"\\s*\\)/,\n                        'variable.env'\n                    ],\n                    // Relations and field references\n                    [\n                        /\\b[A-Z][a-zA-Z0-9_]*\\b/,\n                        'type.model'\n                    ],\n                    [\n                        /\\b[a-z][a-zA-Z0-9_]*\\b/,\n                        'identifier'\n                    ],\n                    // Operators and punctuation\n                    [\n                        /[?]/,\n                        'operator.optional'\n                    ],\n                    [\n                        /\\[\\s*\\]/,\n                        'operator.array'\n                    ],\n                    [\n                        /[{}()\\[\\]]/,\n                        'delimiter.bracket'\n                    ],\n                    [\n                        /[,;]/,\n                        'delimiter'\n                    ],\n                    [\n                        /[:=]/,\n                        'operator'\n                    ]\n                ],\n                comment: [\n                    [\n                        /[^\\/*]+/,\n                        'comment'\n                    ],\n                    [\n                        /\\*\\//,\n                        'comment',\n                        '@pop'\n                    ],\n                    [\n                        /[\\/*]/,\n                        'comment'\n                    ]\n                ],\n                string_double: [\n                    [\n                        /[^\\\\\"]+/,\n                        'string'\n                    ],\n                    [\n                        /\\\\./,\n                        'string.escape'\n                    ],\n                    [\n                        /\"/,\n                        'string',\n                        '@pop'\n                    ]\n                ],\n                string_single: [\n                    [\n                        /[^\\\\']+/,\n                        'string'\n                    ],\n                    [\n                        /\\\\./,\n                        'string.escape'\n                    ],\n                    [\n                        /'/,\n                        'string',\n                        '@pop'\n                    ]\n                ]\n            }\n        });\n        // Prisma-branded dark theme\n        monaco.editor.defineTheme('prisma-dark', {\n            base: 'vs-dark',\n            inherit: true,\n            rules: [\n                {\n                    token: 'keyword.control',\n                    foreground: '7f9cf5',\n                    fontStyle: 'bold'\n                },\n                {\n                    token: 'keyword.other',\n                    foreground: '5a67d8'\n                },\n                {\n                    token: 'type.primitive',\n                    foreground: '71e8df',\n                    fontStyle: 'bold'\n                },\n                {\n                    token: 'type.model',\n                    foreground: '16a394'\n                },\n                {\n                    token: 'annotation',\n                    foreground: '667eea'\n                },\n                {\n                    token: 'string',\n                    foreground: '92efe6'\n                },\n                {\n                    token: 'string.escape',\n                    foreground: '04c8bb'\n                },\n                {\n                    token: 'comment',\n                    foreground: 'a0aec0',\n                    fontStyle: 'italic'\n                },\n                {\n                    token: 'number',\n                    foreground: '667eea'\n                },\n                {\n                    token: 'number.float',\n                    foreground: '667eea'\n                },\n                {\n                    token: 'variable.env',\n                    foreground: '16a394'\n                },\n                {\n                    token: 'operator.optional',\n                    foreground: 'e2e8f0'\n                },\n                {\n                    token: 'operator.array',\n                    foreground: 'e2e8f0'\n                },\n                {\n                    token: 'identifier',\n                    foreground: 'e2e8f0'\n                },\n                {\n                    token: 'delimiter.bracket',\n                    foreground: 'e2e8f0'\n                },\n                {\n                    token: 'delimiter',\n                    foreground: 'cbd5e0'\n                },\n                {\n                    token: 'operator',\n                    foreground: 'e2e8f0'\n                }\n            ],\n            colors: {\n                'editor.background': '#1a202c',\n                'editor.foreground': '#e2e8f0',\n                'editorLineNumber.foreground': '#718096',\n                'editorLineNumber.activeForeground': '#e2e8f0',\n                'editor.selectionBackground': '#2d3748',\n                'editor.selectionHighlightBackground': '#4a5568',\n                'editor.wordHighlightBackground': '#4a5568',\n                'editor.wordHighlightStrongBackground': '#2d3748',\n                'editorCursor.foreground': '#e2e8f0',\n                'editorBracketMatch.background': '#2d374850',\n                'editorBracketMatch.border': '#5a67d8',\n                'editor.lineHighlightBackground': '#2d3748',\n                'editorGutter.background': '#1a202c',\n                'editorWhitespace.foreground': '#4a5568',\n                'editorIndentGuide.background': '#4a5568',\n                'editorIndentGuide.activeBackground': '#718096',\n                'editorRuler.foreground': '#4a5568'\n            }\n        });\n        monaco.editor.setTheme('prisma-dark');\n        // Comprehensive completion provider for Prisma schema\n        const completionProvider = monaco.languages.registerCompletionItemProvider('prisma', {\n            triggerCharacters: [\n                '@',\n                '=',\n                '\"'\n            ],\n            provideCompletionItems: (model, position)=>{\n                const word = model.getWordUntilPosition(position);\n                const range = {\n                    startLineNumber: position.lineNumber,\n                    endLineNumber: position.lineNumber,\n                    startColumn: word.startColumn,\n                    endColumn: word.endColumn\n                };\n                const line = model.getLineContent(position.lineNumber);\n                const beforeCursor = line.substring(0, position.column - 1);\n                const allText = model.getValue();\n                const linesBefore = allText.split('\\n').slice(0, position.lineNumber - 1);\n                // Determine context\n                const isInGenerator = isInsideBlock(linesBefore, line, 'generator');\n                const isInDatasource = isInsideBlock(linesBefore, line, 'datasource');\n                const isInModel = isInsideBlock(linesBefore, line, 'model');\n                const isInEnum = isInsideBlock(linesBefore, line, 'enum');\n                const isAfterAt = beforeCursor.trim().endsWith('@');\n                const isFieldType = isInModel && !isAfterAt && /^\\s+\\w+\\s*$/.test(beforeCursor);\n                const isPropertyValue = /=\\s*$/.test(beforeCursor);\n                let suggestions = [];\n                // Block-level suggestions (only at top level)\n                if (!isInGenerator && !isInDatasource && !isInModel && !isInEnum && /^\\s*(gen|mod|dat|enu|$)/.test(line)) {\n                    suggestions.push({\n                        label: 'generator',\n                        kind: monaco.languages.CompletionItemKind.Class,\n                        insertText: [\n                            'generator ${1:client} {',\n                            '  provider = \"prisma-client-js\"',\n                            '  $0',\n                            '}'\n                        ].join('\\n'),\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                        documentation: 'Define a generator',\n                        range,\n                        sortText: '1generator'\n                    }, {\n                        label: 'model',\n                        kind: monaco.languages.CompletionItemKind.Class,\n                        insertText: [\n                            'model ${1:User} {',\n                            '  id        String   @id @default(cuid())',\n                            '  email     String   @unique',\n                            '  name      String?',\n                            '  createdAt DateTime @default(now())',\n                            '  updatedAt DateTime @updatedAt',\n                            '  $0',\n                            '}'\n                        ].join('\\n'),\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                        documentation: 'Create a new data model',\n                        range,\n                        sortText: '1model'\n                    }, {\n                        label: 'datasource',\n                        kind: monaco.languages.CompletionItemKind.Module,\n                        insertText: [\n                            'datasource ${1:db} {',\n                            '  provider = \"${2:postgresql}\"',\n                            '  url      = env(\"${3:DATABASE_URL}\")',\n                            '  $0',\n                            '}'\n                        ].join('\\n'),\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                        documentation: 'Define a datasource',\n                        range,\n                        sortText: '1datasource'\n                    }, {\n                        label: 'enum',\n                        kind: monaco.languages.CompletionItemKind.Enum,\n                        insertText: [\n                            'enum ${1:Status} {',\n                            '  ${2:ACTIVE}',\n                            '  ${3:INACTIVE}',\n                            '  $0',\n                            '}'\n                        ].join('\\n'),\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                        documentation: 'Create an enumeration',\n                        range,\n                        sortText: '1enum'\n                    });\n                }\n                // Generator properties\n                if (isInGenerator && !isAfterAt) {\n                    if (isPropertyValue) {\n                        // Provider values\n                        if (beforeCursor.includes('provider')) {\n                            suggestions.push({\n                                label: '\"prisma-client-js\"',\n                                kind: monaco.languages.CompletionItemKind.Value,\n                                insertText: '\"prisma-client-js\"',\n                                range\n                            }, {\n                                label: '\"prisma-client\"',\n                                kind: monaco.languages.CompletionItemKind.Value,\n                                insertText: '\"prisma-client\"',\n                                range\n                            });\n                        } else if (beforeCursor.includes('engineType')) {\n                            suggestions.push({\n                                label: '\"library\"',\n                                kind: monaco.languages.CompletionItemKind.Value,\n                                insertText: '\"library\"',\n                                range\n                            }, {\n                                label: '\"binary\"',\n                                kind: monaco.languages.CompletionItemKind.Value,\n                                insertText: '\"binary\"',\n                                range\n                            });\n                        } else if (beforeCursor.includes('moduleFormat')) {\n                            suggestions.push({\n                                label: '\"cjs\"',\n                                kind: monaco.languages.CompletionItemKind.Value,\n                                insertText: '\"cjs\"',\n                                range\n                            }, {\n                                label: '\"esm\"',\n                                kind: monaco.languages.CompletionItemKind.Value,\n                                insertText: '\"esm\"',\n                                range\n                            });\n                        }\n                    } else {\n                        // Generator property names\n                        suggestions.push({\n                            label: 'provider',\n                            kind: monaco.languages.CompletionItemKind.Property,\n                            insertText: 'provider = ',\n                            range,\n                            sortText: '1provider'\n                        }, {\n                            label: 'output',\n                            kind: monaco.languages.CompletionItemKind.Property,\n                            insertText: 'output = \"${1:./generated/client}\"',\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                            range,\n                            sortText: '2output'\n                        }, {\n                            label: 'previewFeatures',\n                            kind: monaco.languages.CompletionItemKind.Property,\n                            insertText: 'previewFeatures = [${1:\"feature\"}]',\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                            range,\n                            sortText: '3previewFeatures'\n                        }, {\n                            label: 'engineType',\n                            kind: monaco.languages.CompletionItemKind.Property,\n                            insertText: 'engineType = \"${1:library}\"',\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                            range,\n                            sortText: '4engineType'\n                        }, {\n                            label: 'binaryTargets',\n                            kind: monaco.languages.CompletionItemKind.Property,\n                            insertText: 'binaryTargets = [${1:\"native\"}]',\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                            range,\n                            sortText: '5binaryTargets'\n                        }, {\n                            label: 'moduleFormat',\n                            kind: monaco.languages.CompletionItemKind.Property,\n                            insertText: 'moduleFormat = \"${1:cjs}\"',\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                            range,\n                            sortText: '6moduleFormat'\n                        });\n                    }\n                }\n                // Datasource properties\n                if (isInDatasource && !isAfterAt) {\n                    if (isPropertyValue) {\n                        if (beforeCursor.includes('provider')) {\n                            suggestions.push({\n                                label: '\"postgresql\"',\n                                kind: monaco.languages.CompletionItemKind.Value,\n                                insertText: '\"postgresql\"',\n                                range\n                            }, {\n                                label: '\"mysql\"',\n                                kind: monaco.languages.CompletionItemKind.Value,\n                                insertText: '\"mysql\"',\n                                range\n                            }, {\n                                label: '\"sqlite\"',\n                                kind: monaco.languages.CompletionItemKind.Value,\n                                insertText: '\"sqlite\"',\n                                range\n                            }, {\n                                label: '\"sqlserver\"',\n                                kind: monaco.languages.CompletionItemKind.Value,\n                                insertText: '\"sqlserver\"',\n                                range\n                            }, {\n                                label: '\"mongodb\"',\n                                kind: monaco.languages.CompletionItemKind.Value,\n                                insertText: '\"mongodb\"',\n                                range\n                            }, {\n                                label: '\"cockroachdb\"',\n                                kind: monaco.languages.CompletionItemKind.Value,\n                                insertText: '\"cockroachdb\"',\n                                range\n                            });\n                        }\n                    } else {\n                        suggestions.push({\n                            label: 'provider',\n                            kind: monaco.languages.CompletionItemKind.Property,\n                            insertText: 'provider = ',\n                            range\n                        }, {\n                            label: 'url',\n                            kind: monaco.languages.CompletionItemKind.Property,\n                            insertText: 'url = env(\"${1:DATABASE_URL}\")',\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                            range\n                        });\n                    }\n                }\n                // Field types in models\n                if (isFieldType) {\n                    suggestions.push(...[\n                        'String',\n                        'Boolean',\n                        'Int',\n                        'BigInt',\n                        'Float',\n                        'Decimal',\n                        'DateTime',\n                        'Json',\n                        'Bytes'\n                    ].map((type)=>({\n                            label: type,\n                            kind: monaco.languages.CompletionItemKind.TypeParameter,\n                            insertText: type,\n                            documentation: \"\".concat(type, \" field type\"),\n                            range,\n                            sortText: \"1\".concat(type)\n                        })));\n                }\n                // Attributes (triggered by @)\n                if (isAfterAt || isInModel && beforeCursor.trim().endsWith('@')) {\n                    suggestions.push(// Field attributes\n                    {\n                        label: '@id',\n                        kind: monaco.languages.CompletionItemKind.Property,\n                        insertText: '@id',\n                        documentation: 'Defines the primary key',\n                        range,\n                        sortText: '1@id'\n                    }, {\n                        label: '@unique',\n                        kind: monaco.languages.CompletionItemKind.Property,\n                        insertText: '@unique',\n                        documentation: 'Defines a unique constraint',\n                        range,\n                        sortText: '1@unique'\n                    }, {\n                        label: '@default',\n                        kind: monaco.languages.CompletionItemKind.Property,\n                        insertText: '@default(${1:value})',\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                        documentation: 'Sets a default value',\n                        range,\n                        sortText: '1@default'\n                    }, {\n                        label: '@relation',\n                        kind: monaco.languages.CompletionItemKind.Property,\n                        insertText: '@relation(fields: [${1:fieldName}], references: [${2:id}])',\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                        documentation: 'Defines a relation between models',\n                        range,\n                        sortText: '1@relation'\n                    }, {\n                        label: '@updatedAt',\n                        kind: monaco.languages.CompletionItemKind.Property,\n                        insertText: '@updatedAt',\n                        documentation: 'Automatically sets the field to now() when the record is updated',\n                        range,\n                        sortText: '1@updatedAt'\n                    }, {\n                        label: '@map',\n                        kind: monaco.languages.CompletionItemKind.Property,\n                        insertText: '@map(\"${1:column_name}\")',\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                        documentation: 'Maps the field to a specific database column',\n                        range,\n                        sortText: '1@map'\n                    }, // Default value functions\n                    {\n                        label: 'autoincrement()',\n                        kind: monaco.languages.CompletionItemKind.Function,\n                        insertText: 'autoincrement()',\n                        documentation: 'Creates a sequence of integers in the underlying database',\n                        range,\n                        sortText: '4autoincrement'\n                    }, {\n                        label: 'cuid()',\n                        kind: monaco.languages.CompletionItemKind.Function,\n                        insertText: 'cuid()',\n                        documentation: 'Generates a globally unique identifier',\n                        range,\n                        sortText: '4cuid'\n                    }, {\n                        label: 'uuid()',\n                        kind: monaco.languages.CompletionItemKind.Function,\n                        insertText: 'uuid()',\n                        documentation: 'Generates a globally unique identifier',\n                        range,\n                        sortText: '4uuid'\n                    }, {\n                        label: 'now()',\n                        kind: monaco.languages.CompletionItemKind.Function,\n                        insertText: 'now()',\n                        documentation: 'Sets a timestamp of the time when a record is created',\n                        range,\n                        sortText: '4now'\n                    }, // Common field snippets\n                    {\n                        label: 'id (Int autoincrement)',\n                        kind: monaco.languages.CompletionItemKind.Snippet,\n                        insertText: 'id ${1:Int} @id @default(autoincrement())',\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                        documentation: 'Integer ID field with auto-increment',\n                        range,\n                        sortText: '5id-int'\n                    }, {\n                        label: 'id (String cuid)',\n                        kind: monaco.languages.CompletionItemKind.Snippet,\n                        insertText: 'id ${1:String} @id @default(cuid())',\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                        documentation: 'String ID field with CUID',\n                        range,\n                        sortText: '5id-string'\n                    }, {\n                        label: 'email field',\n                        kind: monaco.languages.CompletionItemKind.Snippet,\n                        insertText: 'email ${1:String} @unique',\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                        documentation: 'Unique email field',\n                        range,\n                        sortText: '5email'\n                    }, {\n                        label: 'timestamps',\n                        kind: monaco.languages.CompletionItemKind.Snippet,\n                        insertText: 'createdAt DateTime @default(now())\\n  updatedAt DateTime @updatedAt',\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                        documentation: 'Standard timestamp fields',\n                        range,\n                        sortText: '5timestamps'\n                    }, {\n                        label: 'relation field',\n                        kind: monaco.languages.CompletionItemKind.Snippet,\n                        insertText: '${1:author}   ${2:User} @relation(fields: [${3:authorId}], references: [${4:id}])\\n  ${3:authorId} ${5:String}',\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                        documentation: 'Relation field with foreign key',\n                        range,\n                        sortText: '5relation'\n                    });\n                }\n                return {\n                    suggestions\n                };\n            }\n        });\n        // Enhanced hover provider\n        const hoverProvider = monaco.languages.registerHoverProvider('prisma', {\n            provideHover: (model, position)=>{\n                const word = model.getWordAtPosition(position);\n                if (!word) return;\n                const documentation = {\n                    'model': '**Model** - Represents an entity in your application domain and maps to a table (relational databases) or collection (MongoDB)',\n                    'generator': '**Generator** - Determines which assets are created from your Prisma schema',\n                    'datasource': '**Datasource** - Tells Prisma what database you use and how to connect to it',\n                    'enum': '**Enum** - Defines a list of possible values for a field',\n                    '@id': '**@id** - Defines a single-field ID on the model',\n                    '@unique': '**@unique** - Defines a unique constraint for this field',\n                    '@default': '**@default** - Defines a default value for this field',\n                    '@relation': '**@relation** - Defines meta information about the relation',\n                    '@updatedAt': '**@updatedAt** - Automatically stores the time when a record was last updated',\n                    '@map': '**@map** - Maps a field name or enum value from the Prisma schema to a column or document field name in the database',\n                    'String': '**String** - Variable length text',\n                    'Boolean': '**Boolean** - True or false value',\n                    'Int': '**Int** - 32-bit signed integer',\n                    'BigInt': '**BigInt** - 64-bit signed integer',\n                    'Float': '**Float** - Floating point number',\n                    'Decimal': '**Decimal** - High precision floating point number',\n                    'DateTime': '**DateTime** - Timestamp',\n                    'Json': '**Json** - JSON object',\n                    'Bytes': '**Bytes** - Raw bytes (binary data)',\n                    'autoincrement': '**autoincrement()** - Creates a sequence of integers in the underlying database',\n                    'cuid': '**cuid()** - Generates a globally unique identifier based on the cuid spec',\n                    'uuid': '**uuid()** - Generates a globally unique identifier based on the UUID spec',\n                    'now': '**now()** - Sets a timestamp of the time when a record is created'\n                };\n                if (documentation[word.word]) {\n                    return {\n                        range: new monaco.Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn),\n                        contents: [\n                            {\n                                value: documentation[word.word]\n                            }\n                        ]\n                    };\n                }\n            }\n        });\n        // Removed auto-trigger suggestions to prevent duplicate suggestions\n        // Add document formatting provider\n        monaco.languages.registerDocumentFormattingEditProvider('prisma', {\n            provideDocumentFormattingEdits: (model)=>{\n                const value = model.getValue();\n                // Simple Prisma formatting rules\n                const formatted = value.split('\\n').map((line)=>{\n                    // Remove trailing whitespace\n                    line = line.trimEnd();\n                    // Handle indentation for model contents\n                    if (line.trim().match(/^(id|email|name|title|content|published|author|authorId|createdAt|updatedAt|provider|url)\\s+/)) {\n                        // Field definitions should be indented with 2 spaces\n                        const trimmed = line.trim();\n                        return \"  \".concat(trimmed);\n                    }\n                    // Block-level keywords should not be indented\n                    if (line.trim().match(/^(model|generator|datasource|enum)\\s+/)) {\n                        return line.trim();\n                    }\n                    // Closing braces should not be indented\n                    if (line.trim() === '}') {\n                        return '}';\n                    }\n                    return line;\n                }).join('\\n');\n                return [\n                    {\n                        range: model.getFullModelRange(),\n                        text: formatted\n                    }\n                ];\n            }\n        });\n        // Add Prisma-specific commands\n        editor.addAction({\n            id: 'prisma.format',\n            label: 'Format Prisma Schema',\n            keybindings: [\n                monaco.KeyMod.Shift | monaco.KeyMod.Alt | monaco.KeyCode.KeyF\n            ],\n            run: ()=>{\n                handleFormat();\n            }\n        });\n    };\n    const handleFormat = async ()=>{\n        if (!editorRef.current) return;\n        setIsFormatting(true);\n        try {\n            const currentValue = editorRef.current.getValue();\n            // Call the official Prisma formatter via API\n            const response = await fetch('/api/format-schema', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    schema: currentValue\n                })\n            });\n            if (response.ok) {\n                const { formattedSchema } = await response.json();\n                editorRef.current.setValue(formattedSchema);\n                onChange(formattedSchema);\n                // Show success toast\n                toast({\n                    title: \"Schema formatted successfully!\",\n                    description: \"Your schema has been formatted using Prisma's official formatter\"\n                });\n            } else {\n                // Fallback to Monaco's document formatting\n                await editorRef.current.trigger('format', 'editor.action.formatDocument', {});\n                // Show fallback warning\n                toast({\n                    title: \"Schema formatted (fallback)\",\n                    description: \"Used Monaco editor formatting as Prisma formatter was unavailable\"\n                });\n            }\n        } catch (error) {\n            console.error('Error formatting:', error);\n            // Fallback to Monaco's document formatting\n            try {\n                await editorRef.current.trigger('format', 'editor.action.formatDocument', {});\n                // Show fallback warning\n                toast({\n                    title: \"Schema formatted (fallback)\",\n                    description: \"Used Monaco editor formatting due to an error with Prisma formatter\"\n                });\n            } catch (fallbackError) {\n                console.error('Fallback formatting failed:', fallbackError);\n                // Show error toast\n                toast({\n                    title: \"Formatting failed\",\n                    description: \"Unable to format schema. Please check your syntax.\",\n                    variant: \"destructive\"\n                });\n            }\n        } finally{\n            setIsFormatting(false);\n        }\n    };\n    const handlePushToDb = async ()=>{\n        setIsPushing(true);\n        try {\n            // Simulate push to database\n            await new Promise((resolve)=>setTimeout(resolve, 2000));\n            setLastPush(new Date());\n        } catch (error) {\n            console.error('Error pushing to database:', error);\n        } finally{\n            setIsPushing(false);\n        }\n    };\n    if (!isMounted) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex items-center justify-center h-full bg-gray-900\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        width: \"48\",\n                        height: \"60\",\n                        viewBox: \"0 0 58 72\",\n                        fill: \"none\",\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        className: \"mx-auto mb-4 animate-pulse\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            fillRule: \"evenodd\",\n                            clipRule: \"evenodd\",\n                            d: \"M0.522473 45.0933C-0.184191 46.246 -0.173254 47.7004 0.550665 48.8423L13.6534 69.5114C14.5038 70.8529 16.1429 71.4646 17.6642 71.0082L55.4756 59.6648C57.539 59.0457 58.5772 56.7439 57.6753 54.7874L33.3684 2.06007C32.183 -0.511323 28.6095 -0.722394 27.1296 1.69157L0.522473 45.0933ZM32.7225 14.1141C32.2059 12.9187 30.4565 13.1028 30.2001 14.3796L20.842 60.9749C20.6447 61.9574 21.5646 62.7964 22.5248 62.5098L48.6494 54.7114C49.4119 54.4838 49.8047 53.6415 49.4891 52.9111L32.7225 14.1141Z\",\n                            fill: \"white\"\n                        }, void 0, false, {\n                            fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                            lineNumber: 678,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                        lineNumber: 677,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-sm text-gray-400\",\n                        children: \"Initializing editor...\"\n                    }, void 0, false, {\n                        fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                        lineNumber: 680,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                lineNumber: 676,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n            lineNumber: 675,\n            columnNumber: 7\n        }, undefined);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex h-full bg-gray-900\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_card__WEBPACK_IMPORTED_MODULE_4__.Card, {\n                className: \"w-16 border-r border-gray-700 bg-gray-800 rounded-none flex flex-col items-center py-4 space-y-3\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_3__.Button, {\n                        variant: \"ghost\",\n                        size: \"sm\",\n                        onClick: handlePushToDb,\n                        disabled: isPushing,\n                        className: \"w-12 h-12 p-0 flex flex-col items-center justify-center text-gray-300 hover:text-white hover:bg-gray-700\",\n                        title: \"Push schema to database (prisma db push)\",\n                        children: [\n                            isPushing ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Database_Loader2_PaintBucket_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                                className: \"h-4 w-4 animate-spin\"\n                            }, void 0, false, {\n                                fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                                lineNumber: 699,\n                                columnNumber: 13\n                            }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Database_Loader2_PaintBucket_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                                className: \"h-4 w-4\"\n                            }, void 0, false, {\n                                fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                                lineNumber: 701,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"text-xs mt-1\",\n                                children: \"Push\"\n                            }, void 0, false, {\n                                fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                                lineNumber: 703,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                        lineNumber: 690,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_3__.Button, {\n                        variant: \"ghost\",\n                        size: \"sm\",\n                        onClick: handleFormat,\n                        disabled: isFormatting,\n                        className: \"w-12 h-12 p-0 flex flex-col items-center justify-center text-gray-300 hover:text-white hover:bg-gray-700 \".concat(isFormatting ? 'bg-indigo-900/50 text-indigo-300' : ''),\n                        title: isFormatting ? \"Formatting schema...\" : \"Format schema (Shift+Alt+F)\",\n                        children: [\n                            isFormatting ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Database_Loader2_PaintBucket_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                                className: \"h-4 w-4 animate-spin\"\n                            }, void 0, false, {\n                                fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                                lineNumber: 717,\n                                columnNumber: 13\n                            }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Database_Loader2_PaintBucket_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                                className: \"h-4 w-4\"\n                            }, void 0, false, {\n                                fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                                lineNumber: 719,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"text-xs mt-1\",\n                                children: isFormatting ? \"...\" : \"Format\"\n                            }, void 0, false, {\n                                fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                                lineNumber: 721,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                        lineNumber: 706,\n                        columnNumber: 9\n                    }, undefined),\n                    lastPush && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mt-4 flex flex-col items-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_badge__WEBPACK_IMPORTED_MODULE_5__.Badge, {\n                                variant: \"secondary\",\n                                className: \"text-xs rotate-90 whitespace-nowrap bg-gray-700 text-gray-300\",\n                                children: \"Last push\"\n                            }, void 0, false, {\n                                fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                                lineNumber: 726,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"text-xs text-gray-400 mt-2 transform rotate-90 whitespace-nowrap\",\n                                children: lastPush.toLocaleTimeString()\n                            }, void 0, false, {\n                                fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                                lineNumber: 729,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                        lineNumber: 725,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                lineNumber: 689,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-1 flex flex-col\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex-1\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Editor, {\n                        height: \"100%\",\n                        language: \"prisma\",\n                        value: value,\n                        onChange: (newValue)=>onChange(newValue || ''),\n                        onMount: handleEditorDidMount,\n                        theme: \"prisma-dark\",\n                        options: {\n                            minimap: {\n                                enabled: true\n                            },\n                            fontSize: 14,\n                            fontFamily: \"'JetBrains Mono', 'Fira Code', 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace\",\n                            fontLigatures: true,\n                            lineNumbers: 'on',\n                            wordWrap: 'on',\n                            automaticLayout: true,\n                            scrollBeyondLastLine: false,\n                            padding: {\n                                top: 16,\n                                bottom: 16\n                            },\n                            renderWhitespace: 'selection',\n                            bracketPairColorization: {\n                                enabled: true\n                            },\n                            guides: {\n                                bracketPairs: true,\n                                indentation: true\n                            },\n                            suggest: {\n                                showKeywords: true,\n                                showSnippets: true,\n                                showFunctions: true,\n                                showFields: true,\n                                showVariables: true,\n                                showClasses: true,\n                                showModules: true,\n                                showProperties: true,\n                                showEnums: true,\n                                showEnumMembers: true,\n                                showTypeParameters: true,\n                                snippetsPreventQuickSuggestions: false,\n                                filterGraceful: true,\n                                localityBonus: true\n                            },\n                            quickSuggestions: {\n                                other: 'inline',\n                                comments: false,\n                                strings: false\n                            },\n                            quickSuggestionsDelay: 300,\n                            parameterHints: {\n                                enabled: true,\n                                cycle: true\n                            },\n                            autoClosingBrackets: 'always',\n                            autoClosingQuotes: 'always',\n                            autoIndent: 'full',\n                            acceptSuggestionOnCommitCharacter: true,\n                            acceptSuggestionOnEnter: 'smart',\n                            tabCompletion: 'on',\n                            wordBasedSuggestions: 'allDocuments',\n                            folding: true,\n                            foldingStrategy: 'indentation',\n                            showFoldingControls: 'always',\n                            matchBrackets: 'always',\n                            selectionHighlight: true,\n                            occurrencesHighlight: 'singleFile',\n                            cursorBlinking: 'blink',\n                            cursorStyle: 'line',\n                            smoothScrolling: true,\n                            tabSize: 2,\n                            insertSpaces: true,\n                            formatOnPaste: true,\n                            formatOnType: true,\n                            multiCursorModifier: 'ctrlCmd',\n                            mouseWheelZoom: true,\n                            linkedEditing: true,\n                            codeLens: true\n                        }\n                    }, void 0, false, {\n                        fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                        lineNumber: 739,\n                        columnNumber: 11\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                    lineNumber: 738,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n                lineNumber: 737,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/marchess/Projects/prisma-drop/src/components/PrismaSchemaEditor.tsx\",\n        lineNumber: 687,\n        columnNumber: 5\n    }, undefined);\n};\n_s(PrismaSchemaEditor, \"skKGwFBY2FAuYhPLfE8ZQa/fn/0=\", false, function() {\n    return [\n        _components_ui_use_toast__WEBPACK_IMPORTED_MODULE_6__.useToast\n    ];\n});\n_c1 = PrismaSchemaEditor;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PrismaSchemaEditor);\nvar _c, _c1;\n$RefreshReg$(_c, \"Editor\");\n$RefreshReg$(_c1, \"PrismaSchemaEditor\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL1ByaXNtYVNjaGVtYUVkaXRvci50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRTJEO0FBQ3hCO0FBQ2E7QUFDSjtBQUNrQztBQUNoQztBQUNPO0FBRXJELCtDQUErQztBQUMvQyxNQUFNYSxTQUFTVCx3REFBT0EsQ0FBQyxJQUFNLHdZQUE4Qjs7Ozs7O0lBQ3pEVSxLQUFLO0lBQ0xDLFNBQVMsa0JBQ1AsOERBQUNDO1lBQUlDLFdBQVU7c0JBQ2IsNEVBQUNEO2dCQUFJQyxXQUFVOztrQ0FDYiw4REFBQ0M7d0JBQUlDLE9BQU07d0JBQUtDLFFBQU87d0JBQUtDLFNBQVE7d0JBQVlDLE1BQUs7d0JBQU9DLE9BQU07d0JBQTZCTixXQUFVO2tDQUN2Ryw0RUFBQ087NEJBQUtDLFVBQVM7NEJBQVVDLFVBQVM7NEJBQVVDLEdBQUU7NEJBQTRlTCxNQUFLOzs7Ozs7Ozs7OztrQ0FFamlCLDhEQUFDTTt3QkFBRVgsV0FBVTtrQ0FBd0I7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQVJ2Q0o7QUFtQk4sTUFBTWdCLHFCQUFxQjtRQUFDLEVBQUVDLEtBQUssRUFBRUMsUUFBUSxFQUEyQjs7SUFDdEUsTUFBTUMsWUFBWS9CLDZDQUFNQSxDQUFNO0lBQzlCLE1BQU0sQ0FBQ2dDLGNBQWNDLGdCQUFnQixHQUFHL0IsK0NBQVFBLENBQUM7SUFDakQsTUFBTSxDQUFDZ0MsV0FBV0MsYUFBYSxHQUFHakMsK0NBQVFBLENBQUM7SUFDM0MsTUFBTSxDQUFDa0MsVUFBVUMsWUFBWSxHQUFHbkMsK0NBQVFBLENBQWM7SUFDdEQsTUFBTSxDQUFDb0MsV0FBV0MsYUFBYSxHQUFHckMsK0NBQVFBLENBQUM7SUFDM0MsTUFBTSxDQUFDc0MsV0FBV0MsYUFBYSxHQUFHdkMsK0NBQVFBLENBQUM7SUFDM0MsTUFBTSxDQUFDd0MsbUJBQW1CQyxxQkFBcUIsR0FBR3pDLCtDQUFRQSxDQUFRLEVBQUU7SUFDcEUsTUFBTTBDLHNC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O2dDQUNkQyxjQUFjO2dDQUNkQyxlQUFlO2dDQUNmQyxZQUFZO2dDQUNaQyxlQUFlO2dDQUNmQyxhQUFhO2dDQUNiQyxhQUFhO2dDQUNiQyxnQkFBZ0I7Z0NBQ2hCQyxXQUFXO2dDQUNYQyxpQkFBaUI7Z0NBQ2pCQyxvQkFBb0I7Z0NBQ3BCQyxpQ0FBaUM7Z0NBQ2pDQyxnQkFBZ0I7Z0NBQ2hCQyxlQUFlOzRCQUNqQjs0QkFDQUMsa0JBQWtCO2dDQUNoQkMsT0FBTztnQ0FDUEMsVUFBVTtnQ0FDVkMsU0FBUzs0QkFDWDs0QkFDQUMsdUJBQXVCOzRCQUN2QkMsZ0JBQWdCO2dDQUNkcEMsU0FBUztnQ0FDVHFDLE9BQU87NEJBQ1Q7NEJBQ0FDLHFCQUFxQjs0QkFDckJDLG1CQUFtQjs0QkFDbkJDLFlBQVk7NEJBQ1pDLG1DQUFtQzs0QkFDbkNDLHlCQUF5Qjs0QkFDekJDLGVBQWU7NEJBQ2ZDLHNCQUFzQjs0QkFDdEJDLFNBQVM7NEJBQ1RDLGlCQUFpQjs0QkFDakJDLHFCQUFxQjs0QkFDckJDLGVBQWU7NEJBQ2ZDLG9CQUFvQjs0QkFDcEJDLHNCQUFzQjs0QkFDdEJDLGdCQUFnQjs0QkFDaEJDLGFBQWE7NEJBQ2JDLGlCQUFpQjs0QkFDakJDLFNBQVM7NEJBQ1RDLGNBQWM7NEJBQ2RDLGVBQWU7NEJBQ2ZDLGNBQWM7NEJBQ2RDLHFCQUFxQjs0QkFDckJDLGdCQUFnQjs0QkFDaEJDLGVBQWU7NEJBQ2ZDLFVBQVU7d0JBQ1o7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFNWjtHQW54Qk1qTzs7UUFVY2pCLDhEQUFRQTs7O01BVnRCaUI7QUFxeEJOLGlFQUFlQSxrQkFBa0JBLEVBQUMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXJjaGVzcy9Qcm9qZWN0cy9wcmlzbWEtZHJvcC9zcmMvY29tcG9uZW50cy9QcmlzbWFTY2hlbWFFZGl0b3IudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50J1xuXG5pbXBvcnQgUmVhY3QsIHsgdXNlUmVmLCB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgZHluYW1pYyBmcm9tIFwibmV4dC9keW5hbWljXCI7XG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tIFwiQC9jb21wb25lbnRzL3VpL2J1dHRvblwiO1xuaW1wb3J0IHsgQ2FyZCB9IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvY2FyZFwiO1xuaW1wb3J0IHsgRGF0YWJhc2UsIFJlZnJlc2hDdywgUGFpbnRCdWNrZXQsIExvYWRlcjIsIFphcCB9IGZyb20gXCJsdWNpZGUtcmVhY3RcIjtcbmltcG9ydCB7IEJhZGdlIH0gZnJvbSBcIkAvY29tcG9uZW50cy91aS9iYWRnZVwiO1xuaW1wb3J0IHsgdXNlVG9hc3QgfSBmcm9tIFwiQC9jb21wb25lbnRzL3VpL3VzZS10b2FzdFwiO1xuXG4vLyBEeW5hbWljYWxseSBpbXBvcnQgTW9uYWNvIEVkaXRvciB3aXRoIG5vIFNTUlxuY29uc3QgRWRpdG9yID0gZHluYW1pYygoKSA9PiBpbXBvcnQoXCJAbW9uYWNvLWVkaXRvci9yZWFjdFwiKSwge1xuICBzc3I6IGZhbHNlLFxuICBsb2FkaW5nOiAoKSA9PiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBoLWZ1bGwgYmctZ3JheS05MDBcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXJcIj5cbiAgICAgICAgPHN2ZyB3aWR0aD1cIjQ4XCIgaGVpZ2h0PVwiNjBcIiB2aWV3Qm94PVwiMCAwIDU4IDcyXCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgY2xhc3NOYW1lPVwibXgtYXV0byBtYi00IGFuaW1hdGUtcHVsc2VcIj5cbiAgICAgICAgICA8cGF0aCBmaWxsUnVsZT1cImV2ZW5vZGRcIiBjbGlwUnVsZT1cImV2ZW5vZGRcIiBkPVwiTTAuNTIyNDczIDQ1LjA5MzNDLTAuMTg0MTkxIDQ2LjI0NiAtMC4xNzMyNTQgNDcuNzAwNCAwLjU1MDY2NSA0OC44NDIzTDEzLjY1MzQgNjkuNTExNEMxNC41MDM4IDcwLjg1MjkgMTYuMTQyOSA3MS40NjQ2IDE3LjY2NDIgNzEuMDA4Mkw1NS40NzU2IDU5LjY2NDhDNTcuNTM5IDU5LjA0NTcgNTguNTc3MiA1Ni43NDM5IDU3LjY3NTMgNTQuNzg3NEwzMy4zNjg0IDIuMDYwMDdDMzIuMTgzIC0wLjUxMTMyMyAyOC42MDk1IC0wLjcyMjM5NCAyNy4xMjk2IDEuNjkxNTdMMC41MjI0NzMgNDUuMDkzM1pNMzIuNzIyNSAxNC4xMTQxQzMyLjIwNTkgMTIuOTE4NyAzMC40NTY1IDEzLjEwMjggMzAuMjAwMSAxNC4zNzk2TDIwLjg0MiA2MC45NzQ5QzIwLjY0NDcgNjEuOTU3NCAyMS41NjQ2IDYyLjc5NjQgMjIuNTI0OCA2Mi41MDk4TDQ4LjY0OTQgNTQuNzExNEM0OS40MTE5IDU0LjQ4MzggNDkuODA0NyA1My42NDE1IDQ5LjQ4OTEgNTIuOTExMUwzMi43MjI1IDE0LjExNDFaXCIgZmlsbD1cIndoaXRlXCIvPlxuICAgICAgICA8L3N2Zz5cbiAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1zbSB0ZXh0LWdyYXktNDAwXCI+TG9hZGluZyBlZGl0b3IuLi48L3A+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKSxcbn0pO1xuXG5pbnRlcmZhY2UgUHJpc21hU2NoZW1hRWRpdG9yUHJvcHMge1xuICB2YWx1ZTogc3RyaW5nO1xuICBvbkNoYW5nZTogKHZhbHVlOiBzdHJpbmcpID0+IHZvaWQ7XG59XG5cbmNvbnN0IFByaXNtYVNjaGVtYUVkaXRvciA9ICh7IHZhbHVlLCBvbkNoYW5nZSB9OiBQcmlzbWFTY2hlbWFFZGl0b3JQcm9wcykgPT4ge1xuICBjb25zdCBlZGl0b3JSZWYgPSB1c2VSZWY8YW55PihudWxsKTtcbiAgY29uc3QgW2lzRm9ybWF0dGluZywgc2V0SXNGb3JtYXR0aW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2lzUHVzaGluZywgc2V0SXNQdXNoaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2xhc3RQdXNoLCBzZXRMYXN0UHVzaF0gPSB1c2VTdGF0ZTxEYXRlIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IFtpc01vdW50ZWQsIHNldElzTW91bnRlZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFthaUVuYWJsZWQsIHNldEFpRW5hYmxlZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtjYWNoZWRTdWdnZXN0aW9ucywgc2V0Q2FjaGVkU3VnZ2VzdGlvbnNdID0gdXNlU3RhdGU8YW55W10+KFtdKTtcbiAgY29uc3QgZmV0Y2hpbmdJbnRlcnZhbFJlZiA9IHVzZVJlZjxOb2RlSlMuVGltZW91dCB8IG51bGw+KG51bGwpO1xuICBjb25zdCB0aW1lb3V0UmVmID0gdXNlUmVmPE5vZGVKUy5UaW1lb3V0IHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IHsgdG9hc3QgfSA9IHVzZVRvYXN0KCk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRJc01vdW50ZWQodHJ1ZSk7XG4gIH0sIFtdKTtcblxuICAvLyBIZWxwZXIgZnVuY3Rpb24gdG8gZGV0ZXJtaW5lIGlmIHdlJ3JlIGluc2lkZSBhIHNwZWNpZmljIGJsb2NrXG4gIGNvbnN0IGlzSW5zaWRlQmxvY2sgPSAobGluZXNCZWZvcmU6IHN0cmluZ1tdLCBjdXJyZW50TGluZTogc3RyaW5nLCBibG9ja1R5cGU6IHN0cmluZyk6IGJvb2xlYW4gPT4ge1xuICAgIGxldCBvcGVuQmxvY2tzID0gMDtcbiAgICBsZXQgaW5UYXJnZXRCbG9jayA9IGZhbHNlO1xuXG4gICAgZm9yIChjb25zdCBsaW5lIG9mIGxpbmVzQmVmb3JlKSB7XG4gICAgICBjb25zdCB0cmltbWVkID0gbGluZS50cmltKCk7XG4gICAgICBpZiAodHJpbW1lZC5zdGFydHNXaXRoKGJsb2NrVHlwZSkpIHtcbiAgICAgICAgaW5UYXJnZXRCbG9jayA9IHRydWU7XG4gICAgICAgIG9wZW5CbG9ja3MgPSAxO1xuICAgICAgfSBlbHNlIGlmIChpblRhcmdldEJsb2NrKSB7XG4gICAgICAgIGlmICh0cmltbWVkLmluY2x1ZGVzKCd7JykpIG9wZW5CbG9ja3MrKztcbiAgICAgICAgaWYgKHRyaW1tZWQuaW5jbHVkZXMoJ30nKSkgb3BlbkJsb2Nrcy0tO1xuICAgICAgICBpZiAob3BlbkJsb2NrcyA9PT0gMCkgaW5UYXJnZXRCbG9jayA9IGZhbHNlO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIENoZWNrIGN1cnJlbnQgbGluZSB0b29cbiAgICBjb25zdCBjdXJyZW50VHJpbW1lZCA9IGN1cnJlbnRMaW5lLnRyaW0oKTtcbiAgICBpZiAoY3VycmVudFRyaW1tZWQuaW5jbHVkZXMoJ3snKSAmJiBpblRhcmdldEJsb2NrKSBvcGVuQmxvY2tzKys7XG4gICAgaWYgKGN1cnJlbnRUcmltbWVkLmluY2x1ZGVzKCd9JykgJiYgaW5UYXJnZXRCbG9jaykgb3BlbkJsb2Nrcy0tO1xuXG4gICAgcmV0dXJuIGluVGFyZ2V0QmxvY2sgJiYgb3BlbkJsb2NrcyA+IDA7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlRWRpdG9yRGlkTW91bnQgPSAoZWRpdG9yOiBhbnksIG1vbmFjbzogYW55KSA9PiB7XG4gICAgZWRpdG9yUmVmLmN1cnJlbnQgPSBlZGl0b3I7XG5cbiAgICAvLyBSZWdpc3RlciBQcmlzbWEgbGFuZ3VhZ2Ugd2l0aCBjb21wcmVoZW5zaXZlIHN5bnRheCBoaWdobGlnaHRpbmdcbiAgICBtb25hY28ubGFuZ3VhZ2VzLnJlZ2lzdGVyKHsgaWQ6ICdwcmlzbWEnIH0pO1xuXG4gICAgLy8gRW5oYW5jZWQgUHJpc21hIGxhbmd1YWdlIGRlZmluaXRpb25cbiAgICBtb25hY28ubGFuZ3VhZ2VzLnNldE1vbmFyY2hUb2tlbnNQcm92aWRlcigncHJpc21hJywge1xuICAgICAgdG9rZW5pemVyOiB7XG4gICAgICAgIHJvb3Q6IFtcbiAgICAgICAgICAvLyBDb21tZW50c1xuICAgICAgICAgIFsvXFwvXFwvLiokLywgJ2NvbW1lbnQnXSxcbiAgICAgICAgICBbL1xcL1xcKi8sICdjb21tZW50JywgJ0Bjb21tZW50J10sXG4gICAgICAgICAgXG4gICAgICAgICAgLy8gS2V5d29yZHNcbiAgICAgICAgICBbL1xcYihnZW5lcmF0b3J8ZGF0YXNvdXJjZXxtb2RlbHxlbnVtfHR5cGV8dmlldylcXGIvLCAna2V5d29yZC5jb250cm9sJ10sXG4gICAgICAgICAgWy9cXGIocHJvdmlkZXJ8dXJsfHJlbGF0aW9uTW9kZXxiaW5hcnlUYXJnZXRzfHByZXZpZXdGZWF0dXJlc3xvdXRwdXR8ZGlyZWN0VXJsfHNoYWRvd0RhdGFiYXNlVXJsKVxcYi8sICdrZXl3b3JkLm90aGVyJ10sXG4gICAgICAgICAgXG4gICAgICAgICAgLy8gRGF0YSB0eXBlc1xuICAgICAgICAgIFsvXFxiKFN0cmluZ3xCb29sZWFufEludHxCaWdJbnR8RmxvYXR8RGVjaW1hbHxEYXRlVGltZXxKc29ufEJ5dGVzfFVuc3VwcG9ydGVkKVxcYi8sICd0eXBlLnByaW1pdGl2ZSddLFxuICAgICAgICAgIFxuICAgICAgICAgIC8vIEF0dHJpYnV0ZXNcbiAgICAgICAgICBbL0BAP1thLXpBLVpfXVxcdyovLCAnYW5ub3RhdGlvbiddLFxuICAgICAgICAgIFxuICAgICAgICAgIC8vIFN0cmluZyBsaXRlcmFsc1xuICAgICAgICAgIFsvXCIoW15cIlxcXFxdfFxcXFwuKSokLywgJ3N0cmluZy5pbnZhbGlkJ10sIC8vIG5vbi10ZXJtaW5hdGVkIHN0cmluZ1xuICAgICAgICAgIFsvXCIvLCAnc3RyaW5nJywgJ0BzdHJpbmdfZG91YmxlJ10sXG4gICAgICAgICAgWy8nKFteJ1xcXFxdfFxcXFwuKSokLywgJ3N0cmluZy5pbnZhbGlkJ10sIC8vIG5vbi10ZXJtaW5hdGVkIHN0cmluZ1xuICAgICAgICAgIFsvJy8sICdzdHJpbmcnLCAnQHN0cmluZ19zaW5nbGUnXSxcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBOdW1iZXJzXG4gICAgICAgICAgWy9cXGQqXFwuXFxkKyhbZUVdW1xcLStdP1xcZCspPy8sICdudW1iZXIuZmxvYXQnXSxcbiAgICAgICAgICBbL1xcZCsvLCAnbnVtYmVyJ10sXG4gICAgICAgICAgXG4gICAgICAgICAgLy8gRW52aXJvbm1lbnQgdmFyaWFibGVzXG4gICAgICAgICAgWy9lbnZcXHMqXFwoXFxzKlwiW15cIl0qXCJcXHMqXFwpLywgJ3ZhcmlhYmxlLmVudiddLFxuICAgICAgICAgIFxuICAgICAgICAgIC8vIFJlbGF0aW9ucyBhbmQgZmllbGQgcmVmZXJlbmNlc1xuICAgICAgICAgIFsvXFxiW0EtWl1bYS16QS1aMC05X10qXFxiLywgJ3R5cGUubW9kZWwnXSxcbiAgICAgICAgICBbL1xcYlthLXpdW2EtekEtWjAtOV9dKlxcYi8sICdpZGVudGlmaWVyJ10sXG4gICAgICAgICAgXG4gICAgICAgICAgLy8gT3BlcmF0b3JzIGFuZCBwdW5jdHVhdGlvblxuICAgICAgICAgIFsvWz9dLywgJ29wZXJhdG9yLm9wdGlvbmFsJ10sXG4gICAgICAgICAgWy9cXFtcXHMqXFxdLywgJ29wZXJhdG9yLmFycmF5J10sXG4gICAgICAgICAgWy9be30oKVxcW1xcXV0vLCAnZGVsaW1pdGVyLmJyYWNrZXQnXSxcbiAgICAgICAgICBbL1ssO10vLCAnZGVsaW1pdGVyJ10sXG4gICAgICAgICAgWy9bOj1dLywgJ29wZXJhdG9yJ10sXG4gICAgICAgIF0sXG4gICAgICAgIFxuICAgICAgICBjb21tZW50OiBbXG4gICAgICAgICAgWy9bXlxcLypdKy8sICdjb21tZW50J10sXG4gICAgICAgICAgWy9cXCpcXC8vLCAnY29tbWVudCcsICdAcG9wJ10sXG4gICAgICAgICAgWy9bXFwvKl0vLCAnY29tbWVudCddXG4gICAgICAgIF0sXG4gICAgICAgIFxuICAgICAgICBzdHJpbmdfZG91YmxlOiBbXG4gICAgICAgICAgWy9bXlxcXFxcIl0rLywgJ3N0cmluZyddLFxuICAgICAgICAgIFsvXFxcXC4vLCAnc3RyaW5nLmVzY2FwZSddLFxuICAgICAgICAgIFsvXCIvLCAnc3RyaW5nJywgJ0Bwb3AnXVxuICAgICAgICBdLFxuICAgICAgICBcbiAgICAgICAgc3RyaW5nX3NpbmdsZTogW1xuICAgICAgICAgIFsvW15cXFxcJ10rLywgJ3N0cmluZyddLFxuICAgICAgICAgIFsvXFxcXC4vLCAnc3RyaW5nLmVzY2FwZSddLFxuICAgICAgICAgIFsvJy8sICdzdHJpbmcnLCAnQHBvcCddXG4gICAgICAgIF0sXG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvLyBQcmlzbWEtYnJhbmRlZCBkYXJrIHRoZW1lXG4gICAgbW9uYWNvLmVkaXRvci5kZWZpbmVUaGVtZSgncHJpc21hLWRhcmsnLCB7XG4gICAgICBiYXNlOiAndnMtZGFyaycsXG4gICAgICBpbmhlcml0OiB0cnVlLFxuICAgICAgcnVsZXM6IFtcbiAgICAgICAgeyB0b2tlbjogJ2tleXdvcmQuY29udHJvbCcsIGZvcmVncm91bmQ6ICc3ZjljZjUnLCBmb250U3R5bGU6ICdib2xkJyB9LCAvLyBpbmRpZ28tNDAwXG4gICAgICAgIHsgdG9rZW46ICdrZXl3b3JkLm90aGVyJywgZm9yZWdyb3VuZDogJzVhNjdkOCcgfSwgLy8gaW5kaWdvLTYwMFxuICAgICAgICB7IHRva2VuOiAndHlwZS5wcmltaXRpdmUnLCBmb3JlZ3JvdW5kOiAnNzFlOGRmJywgZm9udFN0eWxlOiAnYm9sZCcgfSwgLy8gdGVhbC00MDBcbiAgICAgICAgeyB0b2tlbjogJ3R5cGUubW9kZWwnLCBmb3JlZ3JvdW5kOiAnMTZhMzk0JyB9LCAvLyB0ZWFsLTYwMFxuICAgICAgICB7IHRva2VuOiAnYW5ub3RhdGlvbicsIGZvcmVncm91bmQ6ICc2NjdlZWEnIH0sIC8vIGluZGlnby01MDBcbiAgICAgICAgeyB0b2tlbjogJ3N0cmluZycsIGZvcmVncm91bmQ6ICc5MmVmZTYnIH0sIC8vIHRlYWwtMzAwXG4gICAgICAgIHsgdG9rZW46ICdzdHJpbmcuZXNjYXBlJywgZm9yZWdyb3VuZDogJzA0YzhiYicgfSwgLy8gdGVhbC01MDBcbiAgICAgICAgeyB0b2tlbjogJ2NvbW1lbnQnLCBmb3JlZ3JvdW5kOiAnYTBhZWMwJywgZm9udFN0eWxlOiAnaXRhbGljJyB9LCAvLyBncmF5LTUwMFxuICAgICAgICB7IHRva2VuOiAnbnVtYmVyJywgZm9yZWdyb3VuZDogJzY2N2VlYScgfSwgLy8gaW5kaWdvLTUwMFxuICAgICAgICB7IHRva2VuOiAnbnVtYmVyLmZsb2F0JywgZm9yZWdyb3VuZDogJzY2N2VlYScgfSwgLy8gaW5kaWdvLTUwMFxuICAgICAgICB7IHRva2VuOiAndmFyaWFibGUuZW52JywgZm9yZWdyb3VuZDogJzE2YTM5NCcgfSwgLy8gdGVhbC02MDBcbiAgICAgICAgeyB0b2tlbjogJ29wZXJhdG9yLm9wdGlvbmFsJywgZm9yZWdyb3VuZDogJ2UyZThmMCcgfSwgLy8gZ3JheS0zMDBcbiAgICAgICAgeyB0b2tlbjogJ29wZXJhdG9yLmFycmF5JywgZm9yZWdyb3VuZDogJ2UyZThmMCcgfSwgLy8gZ3JheS0zMDBcbiAgICAgICAgeyB0b2tlbjogJ2lkZW50aWZpZXInLCBmb3JlZ3JvdW5kOiAnZTJlOGYwJyB9LCAvLyBncmF5LTMwMFxuICAgICAgICB7IHRva2VuOiAnZGVsaW1pdGVyLmJyYWNrZXQnLCBmb3JlZ3JvdW5kOiAnZTJlOGYwJyB9LCAvLyBncmF5LTMwMFxuICAgICAgICB7IHRva2VuOiAnZGVsaW1pdGVyJywgZm9yZWdyb3VuZDogJ2NiZDVlMCcgfSwgLy8gZ3JheS00MDBcbiAgICAgICAgeyB0b2tlbjogJ29wZXJhdG9yJywgZm9yZWdyb3VuZDogJ2UyZThmMCcgfSwgLy8gZ3JheS0zMDBcbiAgICAgIF0sXG4gICAgICBjb2xvcnM6IHtcbiAgICAgICAgJ2VkaXRvci5iYWNrZ3JvdW5kJzogJyMxYTIwMmMnLCAvLyBncmF5LTkwMFxuICAgICAgICAnZWRpdG9yLmZvcmVncm91bmQnOiAnI2UyZThmMCcsIC8vIGdyYXktMzAwXG4gICAgICAgICdlZGl0b3JMaW5lTnVtYmVyLmZvcmVncm91bmQnOiAnIzcxODA5NicsIC8vIGdyYXktNjAwXG4gICAgICAgICdlZGl0b3JMaW5lTnVtYmVyLmFjdGl2ZUZvcmVncm91bmQnOiAnI2UyZThmMCcsIC8vIGdyYXktMzAwXG4gICAgICAgICdlZGl0b3Iuc2VsZWN0aW9uQmFja2dyb3VuZCc6ICcjMmQzNzQ4JywgLy8gZ3JheS04MDBcbiAgICAgICAgJ2VkaXRvci5zZWxlY3Rpb25IaWdobGlnaHRCYWNrZ3JvdW5kJzogJyM0YTU1NjgnLCAvLyBncmF5LTcwMFxuICAgICAgICAnZWRpdG9yLndvcmRIaWdobGlnaHRCYWNrZ3JvdW5kJzogJyM0YTU1NjgnLCAvLyBncmF5LTcwMFxuICAgICAgICAnZWRpdG9yLndvcmRIaWdobGlnaHRTdHJvbmdCYWNrZ3JvdW5kJzogJyMyZDM3NDgnLCAvLyBncmF5LTgwMFxuICAgICAgICAnZWRpdG9yQ3Vyc29yLmZvcmVncm91bmQnOiAnI2UyZThmMCcsIC8vIGdyYXktMzAwXG4gICAgICAgICdlZGl0b3JCcmFja2V0TWF0Y2guYmFja2dyb3VuZCc6ICcjMmQzNzQ4NTAnLFxuICAgICAgICAnZWRpdG9yQnJhY2tldE1hdGNoLmJvcmRlcic6ICcjNWE2N2Q4JywgLy8gaW5kaWdvLTYwMFxuICAgICAgICAnZWRpdG9yLmxpbmVIaWdobGlnaHRCYWNrZ3JvdW5kJzogJyMyZDM3NDgnLCAvLyBncmF5LTgwMFxuICAgICAgICAnZWRpdG9yR3V0dGVyLmJhY2tncm91bmQnOiAnIzFhMjAyYycsIC8vIGdyYXktOTAwXG4gICAgICAgICdlZGl0b3JXaGl0ZXNwYWNlLmZvcmVncm91bmQnOiAnIzRhNTU2OCcsIC8vIGdyYXktNzAwXG4gICAgICAgICdlZGl0b3JJbmRlbnRHdWlkZS5iYWNrZ3JvdW5kJzogJyM0YTU1NjgnLCAvLyBncmF5LTcwMFxuICAgICAgICAnZWRpdG9ySW5kZW50R3VpZGUuYWN0aXZlQmFja2dyb3VuZCc6ICcjNzE4MDk2JywgLy8gZ3JheS02MDBcbiAgICAgICAgJ2VkaXRvclJ1bGVyLmZvcmVncm91bmQnOiAnIzRhNTU2OCcsIC8vIGdyYXktNzAwXG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBtb25hY28uZWRpdG9yLnNldFRoZW1lKCdwcmlzbWEtZGFyaycpO1xuXG4gICAgLy8gQ29tcHJlaGVuc2l2ZSBjb21wbGV0aW9uIHByb3ZpZGVyIGZvciBQcmlzbWEgc2NoZW1hXG4gICAgY29uc3QgY29tcGxldGlvblByb3ZpZGVyID0gbW9uYWNvLmxhbmd1YWdlcy5yZWdpc3RlckNvbXBsZXRpb25JdGVtUHJvdmlkZXIoJ3ByaXNtYScsIHtcbiAgICAgIHRyaWdnZXJDaGFyYWN0ZXJzOiBbJ0AnLCAnPScsICdcIiddLFxuICAgICAgcHJvdmlkZUNvbXBsZXRpb25JdGVtczogKG1vZGVsOiBhbnksIHBvc2l0aW9uOiBhbnkpID0+IHtcbiAgICAgICAgY29uc3Qgd29yZCA9IG1vZGVsLmdldFdvcmRVbnRpbFBvc2l0aW9uKHBvc2l0aW9uKTtcbiAgICAgICAgY29uc3QgcmFuZ2UgPSB7XG4gICAgICAgICAgc3RhcnRMaW5lTnVtYmVyOiBwb3NpdGlvbi5saW5lTnVtYmVyLFxuICAgICAgICAgIGVuZExpbmVOdW1iZXI6IHBvc2l0aW9uLmxpbmVOdW1iZXIsXG4gICAgICAgICAgc3RhcnRDb2x1bW46IHdvcmQuc3RhcnRDb2x1bW4sXG4gICAgICAgICAgZW5kQ29sdW1uOiB3b3JkLmVuZENvbHVtblxuICAgICAgICB9O1xuXG4gICAgICAgIGNvbnN0IGxpbmUgPSBtb2RlbC5nZXRMaW5lQ29udGVudChwb3NpdGlvbi5saW5lTnVtYmVyKTtcbiAgICAgICAgY29uc3QgYmVmb3JlQ3Vyc29yID0gbGluZS5zdWJzdHJpbmcoMCwgcG9zaXRpb24uY29sdW1uIC0gMSk7XG4gICAgICAgIGNvbnN0IGFsbFRleHQgPSBtb2RlbC5nZXRWYWx1ZSgpO1xuICAgICAgICBjb25zdCBsaW5lc0JlZm9yZSA9IGFsbFRleHQuc3BsaXQoJ1xcbicpLnNsaWNlKDAsIHBvc2l0aW9uLmxpbmVOdW1iZXIgLSAxKTtcbiAgICAgICAgXG4gICAgICAgIC8vIERldGVybWluZSBjb250ZXh0XG4gICAgICAgIGNvbnN0IGlzSW5HZW5lcmF0b3IgPSBpc0luc2lkZUJsb2NrKGxpbmVzQmVmb3JlLCBsaW5lLCAnZ2VuZXJhdG9yJyk7XG4gICAgICAgIGNvbnN0IGlzSW5EYXRhc291cmNlID0gaXNJbnNpZGVCbG9jayhsaW5lc0JlZm9yZSwgbGluZSwgJ2RhdGFzb3VyY2UnKTtcbiAgICAgICAgY29uc3QgaXNJbk1vZGVsID0gaXNJbnNpZGVCbG9jayhsaW5lc0JlZm9yZSwgbGluZSwgJ21vZGVsJyk7XG4gICAgICAgIGNvbnN0IGlzSW5FbnVtID0gaXNJbnNpZGVCbG9jayhsaW5lc0JlZm9yZSwgbGluZSwgJ2VudW0nKTtcbiAgICAgICAgY29uc3QgaXNBZnRlckF0ID0gYmVmb3JlQ3Vyc29yLnRyaW0oKS5lbmRzV2l0aCgnQCcpO1xuICAgICAgICBjb25zdCBpc0ZpZWxkVHlwZSA9IGlzSW5Nb2RlbCAmJiAhaXNBZnRlckF0ICYmIC9eXFxzK1xcdytcXHMqJC8udGVzdChiZWZvcmVDdXJzb3IpO1xuICAgICAgICBjb25zdCBpc1Byb3BlcnR5VmFsdWUgPSAvPVxccyokLy50ZXN0KGJlZm9yZUN1cnNvcik7XG5cbiAgICAgICAgbGV0IHN1Z2dlc3Rpb25zOiBhbnlbXSA9IFtdO1xuXG4gICAgICAgIC8vIEJsb2NrLWxldmVsIHN1Z2dlc3Rpb25zIChvbmx5IGF0IHRvcCBsZXZlbClcbiAgICAgICAgaWYgKCFpc0luR2VuZXJhdG9yICYmICFpc0luRGF0YXNvdXJjZSAmJiAhaXNJbk1vZGVsICYmICFpc0luRW51bSAmJiBcbiAgICAgICAgICAgIC9eXFxzKihnZW58bW9kfGRhdHxlbnV8JCkvLnRlc3QobGluZSkpIHtcbiAgICAgICAgICBzdWdnZXN0aW9ucy5wdXNoKFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBsYWJlbDogJ2dlbmVyYXRvcicsXG4gICAgICAgICAgICAgIGtpbmQ6IG1vbmFjby5sYW5ndWFnZXMuQ29tcGxldGlvbkl0ZW1LaW5kLkNsYXNzLFxuICAgICAgICAgICAgICBpbnNlcnRUZXh0OiBbXG4gICAgICAgICAgICAgICAgJ2dlbmVyYXRvciAkezE6Y2xpZW50fSB7JyxcbiAgICAgICAgICAgICAgICAnICBwcm92aWRlciA9IFwicHJpc21hLWNsaWVudC1qc1wiJyxcbiAgICAgICAgICAgICAgICAnICAkMCcsXG4gICAgICAgICAgICAgICAgJ30nXG4gICAgICAgICAgICAgIF0uam9pbignXFxuJyksXG4gICAgICAgICAgICAgIGluc2VydFRleHRSdWxlczogbW9uYWNvLmxhbmd1YWdlcy5Db21wbGV0aW9uSXRlbUluc2VydFRleHRSdWxlLkluc2VydEFzU25pcHBldCxcbiAgICAgICAgICAgICAgZG9jdW1lbnRhdGlvbjogJ0RlZmluZSBhIGdlbmVyYXRvcicsXG4gICAgICAgICAgICAgIHJhbmdlLFxuICAgICAgICAgICAgICBzb3J0VGV4dDogJzFnZW5lcmF0b3InXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBsYWJlbDogJ21vZGVsJyxcbiAgICAgICAgICAgICAga2luZDogbW9uYWNvLmxhbmd1YWdlcy5Db21wbGV0aW9uSXRlbUtpbmQuQ2xhc3MsXG4gICAgICAgICAgICAgIGluc2VydFRleHQ6IFtcbiAgICAgICAgICAgICAgICAnbW9kZWwgJHsxOlVzZXJ9IHsnLFxuICAgICAgICAgICAgICAgICcgIGlkICAgICAgICBTdHJpbmcgICBAaWQgQGRlZmF1bHQoY3VpZCgpKScsXG4gICAgICAgICAgICAgICAgJyAgZW1haWwgICAgIFN0cmluZyAgIEB1bmlxdWUnLFxuICAgICAgICAgICAgICAgICcgIG5hbWUgICAgICBTdHJpbmc/JyxcbiAgICAgICAgICAgICAgICAnICBjcmVhdGVkQXQgRGF0ZVRpbWUgQGRlZmF1bHQobm93KCkpJyxcbiAgICAgICAgICAgICAgICAnICB1cGRhdGVkQXQgRGF0ZVRpbWUgQHVwZGF0ZWRBdCcsXG4gICAgICAgICAgICAgICAgJyAgJDAnLFxuICAgICAgICAgICAgICAgICd9J1xuICAgICAgICAgICAgICBdLmpvaW4oJ1xcbicpLFxuICAgICAgICAgICAgICBpbnNlcnRUZXh0UnVsZXM6IG1vbmFjby5sYW5ndWFnZXMuQ29tcGxldGlvbkl0ZW1JbnNlcnRUZXh0UnVsZS5JbnNlcnRBc1NuaXBwZXQsXG4gICAgICAgICAgICAgIGRvY3VtZW50YXRpb246ICdDcmVhdGUgYSBuZXcgZGF0YSBtb2RlbCcsXG4gICAgICAgICAgICAgIHJhbmdlLFxuICAgICAgICAgICAgICBzb3J0VGV4dDogJzFtb2RlbCdcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGxhYmVsOiAnZGF0YXNvdXJjZScsXG4gICAgICAgICAgICAgIGtpbmQ6IG1vbmFjby5sYW5ndWFnZXMuQ29tcGxldGlvbkl0ZW1LaW5kLk1vZHVsZSxcbiAgICAgICAgICAgICAgaW5zZXJ0VGV4dDogW1xuICAgICAgICAgICAgICAgICdkYXRhc291cmNlICR7MTpkYn0geycsXG4gICAgICAgICAgICAgICAgJyAgcHJvdmlkZXIgPSBcIiR7Mjpwb3N0Z3Jlc3FsfVwiJyxcbiAgICAgICAgICAgICAgICAnICB1cmwgICAgICA9IGVudihcIiR7MzpEQVRBQkFTRV9VUkx9XCIpJyxcbiAgICAgICAgICAgICAgICAnICAkMCcsXG4gICAgICAgICAgICAgICAgJ30nXG4gICAgICAgICAgICAgIF0uam9pbignXFxuJyksXG4gICAgICAgICAgICAgIGluc2VydFRleHRSdWxlczogbW9uYWNvLmxhbmd1YWdlcy5Db21wbGV0aW9uSXRlbUluc2VydFRleHRSdWxlLkluc2VydEFzU25pcHBldCxcbiAgICAgICAgICAgICAgZG9jdW1lbnRhdGlvbjogJ0RlZmluZSBhIGRhdGFzb3VyY2UnLFxuICAgICAgICAgICAgICByYW5nZSxcbiAgICAgICAgICAgICAgc29ydFRleHQ6ICcxZGF0YXNvdXJjZSdcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGxhYmVsOiAnZW51bScsXG4gICAgICAgICAgICAgIGtpbmQ6IG1vbmFjby5sYW5ndWFnZXMuQ29tcGxldGlvbkl0ZW1LaW5kLkVudW0sXG4gICAgICAgICAgICAgIGluc2VydFRleHQ6IFtcbiAgICAgICAgICAgICAgICAnZW51bSAkezE6U3RhdHVzfSB7JyxcbiAgICAgICAgICAgICAgICAnICAkezI6QUNUSVZFfScsXG4gICAgICAgICAgICAgICAgJyAgJHszOklOQUNUSVZFfScsXG4gICAgICAgICAgICAgICAgJyAgJDAnLFxuICAgICAgICAgICAgICAgICd9J1xuICAgICAgICAgICAgICBdLmpvaW4oJ1xcbicpLFxuICAgICAgICAgICAgICBpbnNlcnRUZXh0UnVsZXM6IG1vbmFjby5sYW5ndWFnZXMuQ29tcGxldGlvbkl0ZW1JbnNlcnRUZXh0UnVsZS5JbnNlcnRBc1NuaXBwZXQsXG4gICAgICAgICAgICAgIGRvY3VtZW50YXRpb246ICdDcmVhdGUgYW4gZW51bWVyYXRpb24nLFxuICAgICAgICAgICAgICByYW5nZSxcbiAgICAgICAgICAgICAgc29ydFRleHQ6ICcxZW51bSdcbiAgICAgICAgICAgIH1cbiAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gR2VuZXJhdG9yIHByb3BlcnRpZXNcbiAgICAgICAgaWYgKGlzSW5HZW5lcmF0b3IgJiYgIWlzQWZ0ZXJBdCkge1xuICAgICAgICAgIGlmIChpc1Byb3BlcnR5VmFsdWUpIHtcbiAgICAgICAgICAgIC8vIFByb3ZpZGVyIHZhbHVlc1xuICAgICAgICAgICAgaWYgKGJlZm9yZUN1cnNvci5pbmNsdWRlcygncHJvdmlkZXInKSkge1xuICAgICAgICAgICAgICBzdWdnZXN0aW9ucy5wdXNoKFxuICAgICAgICAgICAgICAgIHsgbGFiZWw6ICdcInByaXNtYS1jbGllbnQtanNcIicsIGtpbmQ6IG1vbmFjby5sYW5ndWFnZXMuQ29tcGxldGlvbkl0ZW1LaW5kLlZhbHVlLCBpbnNlcnRUZXh0OiAnXCJwcmlzbWEtY2xpZW50LWpzXCInLCByYW5nZSB9LFxuICAgICAgICAgICAgICAgIHsgbGFiZWw6ICdcInByaXNtYS1jbGllbnRcIicsIGtpbmQ6IG1vbmFjby5sYW5ndWFnZXMuQ29tcGxldGlvbkl0ZW1LaW5kLlZhbHVlLCBpbnNlcnRUZXh0OiAnXCJwcmlzbWEtY2xpZW50XCInLCByYW5nZSB9XG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBFbmdpbmUgdHlwZSB2YWx1ZXNcbiAgICAgICAgICAgIGVsc2UgaWYgKGJlZm9yZUN1cnNvci5pbmNsdWRlcygnZW5naW5lVHlwZScpKSB7XG4gICAgICAgICAgICAgIHN1Z2dlc3Rpb25zLnB1c2goXG4gICAgICAgICAgICAgICAgeyBsYWJlbDogJ1wibGlicmFyeVwiJywga2luZDogbW9uYWNvLmxhbmd1YWdlcy5Db21wbGV0aW9uSXRlbUtpbmQuVmFsdWUsIGluc2VydFRleHQ6ICdcImxpYnJhcnlcIicsIHJhbmdlIH0sXG4gICAgICAgICAgICAgICAgeyBsYWJlbDogJ1wiYmluYXJ5XCInLCBraW5kOiBtb25hY28ubGFuZ3VhZ2VzLkNvbXBsZXRpb25JdGVtS2luZC5WYWx1ZSwgaW5zZXJ0VGV4dDogJ1wiYmluYXJ5XCInLCByYW5nZSB9XG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBNb2R1bGUgZm9ybWF0IHZhbHVlc1xuICAgICAgICAgICAgZWxzZSBpZiAoYmVmb3JlQ3Vyc29yLmluY2x1ZGVzKCdtb2R1bGVGb3JtYXQnKSkge1xuICAgICAgICAgICAgICBzdWdnZXN0aW9ucy5wdXNoKFxuICAgICAgICAgICAgICAgIHsgbGFiZWw6ICdcImNqc1wiJywga2luZDogbW9uYWNvLmxhbmd1YWdlcy5Db21wbGV0aW9uSXRlbUtpbmQuVmFsdWUsIGluc2VydFRleHQ6ICdcImNqc1wiJywgcmFuZ2UgfSxcbiAgICAgICAgICAgICAgICB7IGxhYmVsOiAnXCJlc21cIicsIGtpbmQ6IG1vbmFjby5sYW5ndWFnZXMuQ29tcGxldGlvbkl0ZW1LaW5kLlZhbHVlLCBpbnNlcnRUZXh0OiAnXCJlc21cIicsIHJhbmdlIH1cbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gR2VuZXJhdG9yIHByb3BlcnR5IG5hbWVzXG4gICAgICAgICAgICBzdWdnZXN0aW9ucy5wdXNoKFxuICAgICAgICAgICAgICB7IGxhYmVsOiAncHJvdmlkZXInLCBraW5kOiBtb25hY28ubGFuZ3VhZ2VzLkNvbXBsZXRpb25JdGVtS2luZC5Qcm9wZXJ0eSwgaW5zZXJ0VGV4dDogJ3Byb3ZpZGVyID0gJywgcmFuZ2UsIHNvcnRUZXh0OiAnMXByb3ZpZGVyJyB9LFxuICAgICAgICAgICAgICB7IGxhYmVsOiAnb3V0cHV0Jywga2luZDogbW9uYWNvLmxhbmd1YWdlcy5Db21wbGV0aW9uSXRlbUtpbmQuUHJvcGVydHksIGluc2VydFRleHQ6ICdvdXRwdXQgPSBcIiR7MTouL2dlbmVyYXRlZC9jbGllbnR9XCInLCBpbnNlcnRUZXh0UnVsZXM6IG1vbmFjby5sYW5ndWFnZXMuQ29tcGxldGlvbkl0ZW1JbnNlcnRUZXh0UnVsZS5JbnNlcnRBc1NuaXBwZXQsIHJhbmdlLCBzb3J0VGV4dDogJzJvdXRwdXQnIH0sXG4gICAgICAgICAgICAgIHsgbGFiZWw6ICdwcmV2aWV3RmVhdHVyZXMnLCBraW5kOiBtb25hY28ubGFuZ3VhZ2VzLkNvbXBsZXRpb25JdGVtS2luZC5Qcm9wZXJ0eSwgaW5zZXJ0VGV4dDogJ3ByZXZpZXdGZWF0dXJlcyA9IFskezE6XCJmZWF0dXJlXCJ9XScsIGluc2VydFRleHRSdWxlczogbW9uYWNvLmxhbmd1YWdlcy5Db21wbGV0aW9uSXRlbUluc2VydFRleHRSdWxlLkluc2VydEFzU25pcHBldCwgcmFuZ2UsIHNvcnRUZXh0OiAnM3ByZXZpZXdGZWF0dXJlcycgfSxcbiAgICAgICAgICAgICAgeyBsYWJlbDogJ2VuZ2luZVR5cGUnLCBraW5kOiBtb25hY28ubGFuZ3VhZ2VzLkNvbXBsZXRpb25JdGVtS2luZC5Qcm9wZXJ0eSwgaW5zZXJ0VGV4dDogJ2VuZ2luZVR5cGUgPSBcIiR7MTpsaWJyYXJ5fVwiJywgaW5zZXJ0VGV4dFJ1bGVzOiBtb25hY28ubGFuZ3VhZ2VzLkNvbXBsZXRpb25JdGVtSW5zZXJ0VGV4dFJ1bGUuSW5zZXJ0QXNTbmlwcGV0LCByYW5nZSwgc29ydFRleHQ6ICc0ZW5naW5lVHlwZScgfSxcbiAgICAgICAgICAgICAgeyBsYWJlbDogJ2JpbmFyeVRhcmdldHMnLCBraW5kOiBtb25hY28ubGFuZ3VhZ2VzLkNvbXBsZXRpb25JdGVtS2luZC5Qcm9wZXJ0eSwgaW5zZXJ0VGV4dDogJ2JpbmFyeVRhcmdldHMgPSBbJHsxOlwibmF0aXZlXCJ9XScsIGluc2VydFRleHRSdWxlczogbW9uYWNvLmxhbmd1YWdlcy5Db21wbGV0aW9uSXRlbUluc2VydFRleHRSdWxlLkluc2VydEFzU25pcHBldCwgcmFuZ2UsIHNvcnRUZXh0OiAnNWJpbmFyeVRhcmdldHMnIH0sXG4gICAgICAgICAgICAgIHsgbGFiZWw6ICdtb2R1bGVGb3JtYXQnLCBraW5kOiBtb25hY28ubGFuZ3VhZ2VzLkNvbXBsZXRpb25JdGVtS2luZC5Qcm9wZXJ0eSwgaW5zZXJ0VGV4dDogJ21vZHVsZUZvcm1hdCA9IFwiJHsxOmNqc31cIicsIGluc2VydFRleHRSdWxlczogbW9uYWNvLmxhbmd1YWdlcy5Db21wbGV0aW9uSXRlbUluc2VydFRleHRSdWxlLkluc2VydEFzU25pcHBldCwgcmFuZ2UsIHNvcnRUZXh0OiAnNm1vZHVsZUZvcm1hdCcgfVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBEYXRhc291cmNlIHByb3BlcnRpZXNcbiAgICAgICAgaWYgKGlzSW5EYXRhc291cmNlICYmICFpc0FmdGVyQXQpIHtcbiAgICAgICAgICBpZiAoaXNQcm9wZXJ0eVZhbHVlKSB7XG4gICAgICAgICAgICBpZiAoYmVmb3JlQ3Vyc29yLmluY2x1ZGVzKCdwcm92aWRlcicpKSB7XG4gICAgICAgICAgICAgIHN1Z2dlc3Rpb25zLnB1c2goXG4gICAgICAgICAgICAgICAgeyBsYWJlbDogJ1wicG9zdGdyZXNxbFwiJywga2luZDogbW9uYWNvLmxhbmd1YWdlcy5Db21wbGV0aW9uSXRlbUtpbmQuVmFsdWUsIGluc2VydFRleHQ6ICdcInBvc3RncmVzcWxcIicsIHJhbmdlIH0sXG4gICAgICAgICAgICAgICAgeyBsYWJlbDogJ1wibXlzcWxcIicsIGtpbmQ6IG1vbmFjby5sYW5ndWFnZXMuQ29tcGxldGlvbkl0ZW1LaW5kLlZhbHVlLCBpbnNlcnRUZXh0OiAnXCJteXNxbFwiJywgcmFuZ2UgfSxcbiAgICAgICAgICAgICAgICB7IGxhYmVsOiAnXCJzcWxpdGVcIicsIGtpbmQ6IG1vbmFjby5sYW5ndWFnZXMuQ29tcGxldGlvbkl0ZW1LaW5kLlZhbHVlLCBpbnNlcnRUZXh0OiAnXCJzcWxpdGVcIicsIHJhbmdlIH0sXG4gICAgICAgICAgICAgICAgeyBsYWJlbDogJ1wic3Fsc2VydmVyXCInLCBraW5kOiBtb25hY28ubGFuZ3VhZ2VzLkNvbXBsZXRpb25JdGVtS2luZC5WYWx1ZSwgaW5zZXJ0VGV4dDogJ1wic3Fsc2VydmVyXCInLCByYW5nZSB9LFxuICAgICAgICAgICAgICAgIHsgbGFiZWw6ICdcIm1vbmdvZGJcIicsIGtpbmQ6IG1vbmFjby5sYW5ndWFnZXMuQ29tcGxldGlvbkl0ZW1LaW5kLlZhbHVlLCBpbnNlcnRUZXh0OiAnXCJtb25nb2RiXCInLCByYW5nZSB9LFxuICAgICAgICAgICAgICAgIHsgbGFiZWw6ICdcImNvY2tyb2FjaGRiXCInLCBraW5kOiBtb25hY28ubGFuZ3VhZ2VzLkNvbXBsZXRpb25JdGVtS2luZC5WYWx1ZSwgaW5zZXJ0VGV4dDogJ1wiY29ja3JvYWNoZGJcIicsIHJhbmdlIH1cbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc3VnZ2VzdGlvbnMucHVzaChcbiAgICAgICAgICAgICAgeyBsYWJlbDogJ3Byb3ZpZGVyJywga2luZDogbW9uYWNvLmxhbmd1YWdlcy5Db21wbGV0aW9uSXRlbUtpbmQuUHJvcGVydHksIGluc2VydFRleHQ6ICdwcm92aWRlciA9ICcsIHJhbmdlIH0sXG4gICAgICAgICAgICAgIHsgbGFiZWw6ICd1cmwnLCBraW5kOiBtb25hY28ubGFuZ3VhZ2VzLkNvbXBsZXRpb25JdGVtS2luZC5Qcm9wZXJ0eSwgaW5zZXJ0VGV4dDogJ3VybCA9IGVudihcIiR7MTpEQVRBQkFTRV9VUkx9XCIpJywgaW5zZXJ0VGV4dFJ1bGVzOiBtb25hY28ubGFuZ3VhZ2VzLkNvbXBsZXRpb25JdGVtSW5zZXJ0VGV4dFJ1bGUuSW5zZXJ0QXNTbmlwcGV0LCByYW5nZSB9XG4gICAgICAgICAgICApO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEZpZWxkIHR5cGVzIGluIG1vZGVsc1xuICAgICAgICBpZiAoaXNGaWVsZFR5cGUpIHtcbiAgICAgICAgICBzdWdnZXN0aW9ucy5wdXNoKFxuICAgICAgICAgICAgLi4uWydTdHJpbmcnLCAnQm9vbGVhbicsICdJbnQnLCAnQmlnSW50JywgJ0Zsb2F0JywgJ0RlY2ltYWwnLCAnRGF0ZVRpbWUnLCAnSnNvbicsICdCeXRlcyddLm1hcCh0eXBlID0+ICh7XG4gICAgICAgICAgICAgIGxhYmVsOiB0eXBlLFxuICAgICAgICAgICAgICBraW5kOiBtb25hY28ubGFuZ3VhZ2VzLkNvbXBsZXRpb25JdGVtS2luZC5UeXBlUGFyYW1ldGVyLFxuICAgICAgICAgICAgICBpbnNlcnRUZXh0OiB0eXBlLFxuICAgICAgICAgICAgICBkb2N1bWVudGF0aW9uOiBgJHt0eXBlfSBmaWVsZCB0eXBlYCxcbiAgICAgICAgICAgICAgcmFuZ2UsXG4gICAgICAgICAgICAgIHNvcnRUZXh0OiBgMSR7dHlwZX1gXG4gICAgICAgICAgICB9KSlcbiAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gQXR0cmlidXRlcyAodHJpZ2dlcmVkIGJ5IEApXG4gICAgICAgIGlmIChpc0FmdGVyQXQgfHwgKGlzSW5Nb2RlbCAmJiBiZWZvcmVDdXJzb3IudHJpbSgpLmVuZHNXaXRoKCdAJykpKSB7XG4gICAgICAgICAgc3VnZ2VzdGlvbnMucHVzaChcbiAgICAgICAgICAgIC8vIEZpZWxkIGF0dHJpYnV0ZXNcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgbGFiZWw6ICdAaWQnLFxuICAgICAgICAgICAgICBraW5kOiBtb25hY28ubGFuZ3VhZ2VzLkNvbXBsZXRpb25JdGVtS2luZC5Qcm9wZXJ0eSxcbiAgICAgICAgICAgICAgaW5zZXJ0VGV4dDogJ0BpZCcsXG4gICAgICAgICAgICAgIGRvY3VtZW50YXRpb246ICdEZWZpbmVzIHRoZSBwcmltYXJ5IGtleScsXG4gICAgICAgICAgICAgIHJhbmdlLFxuICAgICAgICAgICAgICBzb3J0VGV4dDogJzFAaWQnXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBsYWJlbDogJ0B1bmlxdWUnLFxuICAgICAgICAgICAgICBraW5kOiBtb25hY28ubGFuZ3VhZ2VzLkNvbXBsZXRpb25JdGVtS2luZC5Qcm9wZXJ0eSxcbiAgICAgICAgICAgICAgaW5zZXJ0VGV4dDogJ0B1bmlxdWUnLFxuICAgICAgICAgICAgICBkb2N1bWVudGF0aW9uOiAnRGVmaW5lcyBhIHVuaXF1ZSBjb25zdHJhaW50JyxcbiAgICAgICAgICAgICAgcmFuZ2UsXG4gICAgICAgICAgICAgIHNvcnRUZXh0OiAnMUB1bmlxdWUnXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBsYWJlbDogJ0BkZWZhdWx0JyxcbiAgICAgICAgICAgICAga2luZDogbW9uYWNvLmxhbmd1YWdlcy5Db21wbGV0aW9uSXRlbUtpbmQuUHJvcGVydHksXG4gICAgICAgICAgICAgIGluc2VydFRleHQ6ICdAZGVmYXVsdCgkezE6dmFsdWV9KScsXG4gICAgICAgICAgICAgIGluc2VydFRleHRSdWxlczogbW9uYWNvLmxhbmd1YWdlcy5Db21wbGV0aW9uSXRlbUluc2VydFRleHRSdWxlLkluc2VydEFzU25pcHBldCxcbiAgICAgICAgICAgICAgZG9jdW1lbnRhdGlvbjogJ1NldHMgYSBkZWZhdWx0IHZhbHVlJyxcbiAgICAgICAgICAgICAgcmFuZ2UsXG4gICAgICAgICAgICAgIHNvcnRUZXh0OiAnMUBkZWZhdWx0J1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgbGFiZWw6ICdAcmVsYXRpb24nLFxuICAgICAgICAgICAgICBraW5kOiBtb25hY28ubGFuZ3VhZ2VzLkNvbXBsZXRpb25JdGVtS2luZC5Qcm9wZXJ0eSxcbiAgICAgICAgICAgICAgaW5zZXJ0VGV4dDogJ0ByZWxhdGlvbihmaWVsZHM6IFskezE6ZmllbGROYW1lfV0sIHJlZmVyZW5jZXM6IFskezI6aWR9XSknLFxuICAgICAgICAgICAgICBpbnNlcnRUZXh0UnVsZXM6IG1vbmFjby5sYW5ndWFnZXMuQ29tcGxldGlvbkl0ZW1JbnNlcnRUZXh0UnVsZS5JbnNlcnRBc1NuaXBwZXQsXG4gICAgICAgICAgICAgIGRvY3VtZW50YXRpb246ICdEZWZpbmVzIGEgcmVsYXRpb24gYmV0d2VlbiBtb2RlbHMnLFxuICAgICAgICAgICAgICByYW5nZSxcbiAgICAgICAgICAgICAgc29ydFRleHQ6ICcxQHJlbGF0aW9uJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgbGFiZWw6ICdAdXBkYXRlZEF0JyxcbiAgICAgICAgICAgICAga2luZDogbW9uYWNvLmxhbmd1YWdlcy5Db21wbGV0aW9uSXRlbUtpbmQuUHJvcGVydHksXG4gICAgICAgICAgICAgIGluc2VydFRleHQ6ICdAdXBkYXRlZEF0JyxcbiAgICAgICAgICAgICAgZG9jdW1lbnRhdGlvbjogJ0F1dG9tYXRpY2FsbHkgc2V0cyB0aGUgZmllbGQgdG8gbm93KCkgd2hlbiB0aGUgcmVjb3JkIGlzIHVwZGF0ZWQnLFxuICAgICAgICAgICAgICByYW5nZSxcbiAgICAgICAgICAgICAgc29ydFRleHQ6ICcxQHVwZGF0ZWRBdCdcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGxhYmVsOiAnQG1hcCcsXG4gICAgICAgICAgICAgIGtpbmQ6IG1vbmFjby5sYW5ndWFnZXMuQ29tcGxldGlvbkl0ZW1LaW5kLlByb3BlcnR5LFxuICAgICAgICAgICAgICBpbnNlcnRUZXh0OiAnQG1hcChcIiR7MTpjb2x1bW5fbmFtZX1cIiknLFxuICAgICAgICAgICAgICBpbnNlcnRUZXh0UnVsZXM6IG1vbmFjby5sYW5ndWFnZXMuQ29tcGxldGlvbkl0ZW1JbnNlcnRUZXh0UnVsZS5JbnNlcnRBc1NuaXBwZXQsXG4gICAgICAgICAgICAgIGRvY3VtZW50YXRpb246ICdNYXBzIHRoZSBmaWVsZCB0byBhIHNwZWNpZmljIGRhdGFiYXNlIGNvbHVtbicsXG4gICAgICAgICAgICAgIHJhbmdlLFxuICAgICAgICAgICAgICBzb3J0VGV4dDogJzFAbWFwJ1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLy8gRGVmYXVsdCB2YWx1ZSBmdW5jdGlvbnNcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgbGFiZWw6ICdhdXRvaW5jcmVtZW50KCknLFxuICAgICAgICAgICAgICBraW5kOiBtb25hY28ubGFuZ3VhZ2VzLkNvbXBsZXRpb25JdGVtS2luZC5GdW5jdGlvbixcbiAgICAgICAgICAgICAgaW5zZXJ0VGV4dDogJ2F1dG9pbmNyZW1lbnQoKScsXG4gICAgICAgICAgICAgIGRvY3VtZW50YXRpb246ICdDcmVhdGVzIGEgc2VxdWVuY2Ugb2YgaW50ZWdlcnMgaW4gdGhlIHVuZGVybHlpbmcgZGF0YWJhc2UnLFxuICAgICAgICAgICAgICByYW5nZSxcbiAgICAgICAgICAgICAgc29ydFRleHQ6ICc0YXV0b2luY3JlbWVudCdcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGxhYmVsOiAnY3VpZCgpJyxcbiAgICAgICAgICAgICAga2luZDogbW9uYWNvLmxhbmd1YWdlcy5Db21wbGV0aW9uSXRlbUtpbmQuRnVuY3Rpb24sXG4gICAgICAgICAgICAgIGluc2VydFRleHQ6ICdjdWlkKCknLFxuICAgICAgICAgICAgICBkb2N1bWVudGF0aW9uOiAnR2VuZXJhdGVzIGEgZ2xvYmFsbHkgdW5pcXVlIGlkZW50aWZpZXInLFxuICAgICAgICAgICAgICByYW5nZSxcbiAgICAgICAgICAgICAgc29ydFRleHQ6ICc0Y3VpZCdcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGxhYmVsOiAndXVpZCgpJyxcbiAgICAgICAgICAgICAga2luZDogbW9uYWNvLmxhbmd1YWdlcy5Db21wbGV0aW9uSXRlbUtpbmQuRnVuY3Rpb24sXG4gICAgICAgICAgICAgIGluc2VydFRleHQ6ICd1dWlkKCknLFxuICAgICAgICAgICAgICBkb2N1bWVudGF0aW9uOiAnR2VuZXJhdGVzIGEgZ2xvYmFsbHkgdW5pcXVlIGlkZW50aWZpZXInLFxuICAgICAgICAgICAgICByYW5nZSxcbiAgICAgICAgICAgICAgc29ydFRleHQ6ICc0dXVpZCdcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGxhYmVsOiAnbm93KCknLFxuICAgICAgICAgICAgICBraW5kOiBtb25hY28ubGFuZ3VhZ2VzLkNvbXBsZXRpb25JdGVtS2luZC5GdW5jdGlvbixcbiAgICAgICAgICAgICAgaW5zZXJ0VGV4dDogJ25vdygpJyxcbiAgICAgICAgICAgICAgZG9jdW1lbnRhdGlvbjogJ1NldHMgYSB0aW1lc3RhbXAgb2YgdGhlIHRpbWUgd2hlbiBhIHJlY29yZCBpcyBjcmVhdGVkJyxcbiAgICAgICAgICAgICAgcmFuZ2UsXG4gICAgICAgICAgICAgIHNvcnRUZXh0OiAnNG5vdydcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8vIENvbW1vbiBmaWVsZCBzbmlwcGV0c1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBsYWJlbDogJ2lkIChJbnQgYXV0b2luY3JlbWVudCknLFxuICAgICAgICAgICAgICBraW5kOiBtb25hY28ubGFuZ3VhZ2VzLkNvbXBsZXRpb25JdGVtS2luZC5TbmlwcGV0LFxuICAgICAgICAgICAgICBpbnNlcnRUZXh0OiAnaWQgJHsxOkludH0gQGlkIEBkZWZhdWx0KGF1dG9pbmNyZW1lbnQoKSknLFxuICAgICAgICAgICAgICBpbnNlcnRUZXh0UnVsZXM6IG1vbmFjby5sYW5ndWFnZXMuQ29tcGxldGlvbkl0ZW1JbnNlcnRUZXh0UnVsZS5JbnNlcnRBc1NuaXBwZXQsXG4gICAgICAgICAgICAgIGRvY3VtZW50YXRpb246ICdJbnRlZ2VyIElEIGZpZWxkIHdpdGggYXV0by1pbmNyZW1lbnQnLFxuICAgICAgICAgICAgICByYW5nZSxcbiAgICAgICAgICAgICAgc29ydFRleHQ6ICc1aWQtaW50J1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgbGFiZWw6ICdpZCAoU3RyaW5nIGN1aWQpJyxcbiAgICAgICAgICAgICAga2luZDogbW9uYWNvLmxhbmd1YWdlcy5Db21wbGV0aW9uSXRlbUtpbmQuU25pcHBldCxcbiAgICAgICAgICAgICAgaW5zZXJ0VGV4dDogJ2lkICR7MTpTdHJpbmd9IEBpZCBAZGVmYXVsdChjdWlkKCkpJyxcbiAgICAgICAgICAgICAgaW5zZXJ0VGV4dFJ1bGVzOiBtb25hY28ubGFuZ3VhZ2VzLkNvbXBsZXRpb25JdGVtSW5zZXJ0VGV4dFJ1bGUuSW5zZXJ0QXNTbmlwcGV0LFxuICAgICAgICAgICAgICBkb2N1bWVudGF0aW9uOiAnU3RyaW5nIElEIGZpZWxkIHdpdGggQ1VJRCcsXG4gICAgICAgICAgICAgIHJhbmdlLFxuICAgICAgICAgICAgICBzb3J0VGV4dDogJzVpZC1zdHJpbmcnXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBsYWJlbDogJ2VtYWlsIGZpZWxkJyxcbiAgICAgICAgICAgICAga2luZDogbW9uYWNvLmxhbmd1YWdlcy5Db21wbGV0aW9uSXRlbUtpbmQuU25pcHBldCxcbiAgICAgICAgICAgICAgaW5zZXJ0VGV4dDogJ2VtYWlsICR7MTpTdHJpbmd9IEB1bmlxdWUnLFxuICAgICAgICAgICAgICBpbnNlcnRUZXh0UnVsZXM6IG1vbmFjby5sYW5ndWFnZXMuQ29tcGxldGlvbkl0ZW1JbnNlcnRUZXh0UnVsZS5JbnNlcnRBc1NuaXBwZXQsXG4gICAgICAgICAgICAgIGRvY3VtZW50YXRpb246ICdVbmlxdWUgZW1haWwgZmllbGQnLFxuICAgICAgICAgICAgICByYW5nZSxcbiAgICAgICAgICAgICAgc29ydFRleHQ6ICc1ZW1haWwnXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBsYWJlbDogJ3RpbWVzdGFtcHMnLFxuICAgICAgICAgICAgICBraW5kOiBtb25hY28ubGFuZ3VhZ2VzLkNvbXBsZXRpb25JdGVtS2luZC5TbmlwcGV0LFxuICAgICAgICAgICAgICBpbnNlcnRUZXh0OiAnY3JlYXRlZEF0IERhdGVUaW1lIEBkZWZhdWx0KG5vdygpKVxcbiAgdXBkYXRlZEF0IERhdGVUaW1lIEB1cGRhdGVkQXQnLFxuICAgICAgICAgICAgICBpbnNlcnRUZXh0UnVsZXM6IG1vbmFjby5sYW5ndWFnZXMuQ29tcGxldGlvbkl0ZW1JbnNlcnRUZXh0UnVsZS5JbnNlcnRBc1NuaXBwZXQsXG4gICAgICAgICAgICAgIGRvY3VtZW50YXRpb246ICdTdGFuZGFyZCB0aW1lc3RhbXAgZmllbGRzJyxcbiAgICAgICAgICAgICAgcmFuZ2UsXG4gICAgICAgICAgICAgIHNvcnRUZXh0OiAnNXRpbWVzdGFtcHMnXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBsYWJlbDogJ3JlbGF0aW9uIGZpZWxkJyxcbiAgICAgICAgICAgICAga2luZDogbW9uYWNvLmxhbmd1YWdlcy5Db21wbGV0aW9uSXRlbUtpbmQuU25pcHBldCxcbiAgICAgICAgICAgICAgaW5zZXJ0VGV4dDogJyR7MTphdXRob3J9ICAgJHsyOlVzZXJ9IEByZWxhdGlvbihmaWVsZHM6IFskezM6YXV0aG9ySWR9XSwgcmVmZXJlbmNlczogWyR7NDppZH1dKVxcbiAgJHszOmF1dGhvcklkfSAkezU6U3RyaW5nfScsXG4gICAgICAgICAgICAgIGluc2VydFRleHRSdWxlczogbW9uYWNvLmxhbmd1YWdlcy5Db21wbGV0aW9uSXRlbUluc2VydFRleHRSdWxlLkluc2VydEFzU25pcHBldCxcbiAgICAgICAgICAgICAgZG9jdW1lbnRhdGlvbjogJ1JlbGF0aW9uIGZpZWxkIHdpdGggZm9yZWlnbiBrZXknLFxuICAgICAgICAgICAgICByYW5nZSxcbiAgICAgICAgICAgICAgc29ydFRleHQ6ICc1cmVsYXRpb24nXG4gICAgICAgICAgICB9XG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB7IHN1Z2dlc3Rpb25zIH07XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvLyBFbmhhbmNlZCBob3ZlciBwcm92aWRlclxuICAgIGNvbnN0IGhvdmVyUHJvdmlkZXIgPSBtb25hY28ubGFuZ3VhZ2VzLnJlZ2lzdGVySG92ZXJQcm92aWRlcigncHJpc21hJywge1xuICAgICAgcHJvdmlkZUhvdmVyOiAobW9kZWw6IGFueSwgcG9zaXRpb246IGFueSkgPT4ge1xuICAgICAgICBjb25zdCB3b3JkID0gbW9kZWwuZ2V0V29yZEF0UG9zaXRpb24ocG9zaXRpb24pO1xuICAgICAgICBpZiAoIXdvcmQpIHJldHVybjtcblxuICAgICAgICBjb25zdCBkb2N1bWVudGF0aW9uOiB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9ID0ge1xuICAgICAgICAgICdtb2RlbCc6ICcqKk1vZGVsKiogLSBSZXByZXNlbnRzIGFuIGVudGl0eSBpbiB5b3VyIGFwcGxpY2F0aW9uIGRvbWFpbiBhbmQgbWFwcyB0byBhIHRhYmxlIChyZWxhdGlvbmFsIGRhdGFiYXNlcykgb3IgY29sbGVjdGlvbiAoTW9uZ29EQiknLFxuICAgICAgICAgICdnZW5lcmF0b3InOiAnKipHZW5lcmF0b3IqKiAtIERldGVybWluZXMgd2hpY2ggYXNzZXRzIGFyZSBjcmVhdGVkIGZyb20geW91ciBQcmlzbWEgc2NoZW1hJyxcbiAgICAgICAgICAnZGF0YXNvdXJjZSc6ICcqKkRhdGFzb3VyY2UqKiAtIFRlbGxzIFByaXNtYSB3aGF0IGRhdGFiYXNlIHlvdSB1c2UgYW5kIGhvdyB0byBjb25uZWN0IHRvIGl0JyxcbiAgICAgICAgICAnZW51bSc6ICcqKkVudW0qKiAtIERlZmluZXMgYSBsaXN0IG9mIHBvc3NpYmxlIHZhbHVlcyBmb3IgYSBmaWVsZCcsXG4gICAgICAgICAgJ0BpZCc6ICcqKkBpZCoqIC0gRGVmaW5lcyBhIHNpbmdsZS1maWVsZCBJRCBvbiB0aGUgbW9kZWwnLFxuICAgICAgICAgICdAdW5pcXVlJzogJyoqQHVuaXF1ZSoqIC0gRGVmaW5lcyBhIHVuaXF1ZSBjb25zdHJhaW50IGZvciB0aGlzIGZpZWxkJyxcbiAgICAgICAgICAnQGRlZmF1bHQnOiAnKipAZGVmYXVsdCoqIC0gRGVmaW5lcyBhIGRlZmF1bHQgdmFsdWUgZm9yIHRoaXMgZmllbGQnLFxuICAgICAgICAgICdAcmVsYXRpb24nOiAnKipAcmVsYXRpb24qKiAtIERlZmluZXMgbWV0YSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgcmVsYXRpb24nLFxuICAgICAgICAgICdAdXBkYXRlZEF0JzogJyoqQHVwZGF0ZWRBdCoqIC0gQXV0b21hdGljYWxseSBzdG9yZXMgdGhlIHRpbWUgd2hlbiBhIHJlY29yZCB3YXMgbGFzdCB1cGRhdGVkJyxcbiAgICAgICAgICAnQG1hcCc6ICcqKkBtYXAqKiAtIE1hcHMgYSBmaWVsZCBuYW1lIG9yIGVudW0gdmFsdWUgZnJvbSB0aGUgUHJpc21hIHNjaGVtYSB0byBhIGNvbHVtbiBvciBkb2N1bWVudCBmaWVsZCBuYW1lIGluIHRoZSBkYXRhYmFzZScsXG4gICAgICAgICAgJ1N0cmluZyc6ICcqKlN0cmluZyoqIC0gVmFyaWFibGUgbGVuZ3RoIHRleHQnLFxuICAgICAgICAgICdCb29sZWFuJzogJyoqQm9vbGVhbioqIC0gVHJ1ZSBvciBmYWxzZSB2YWx1ZScsXG4gICAgICAgICAgJ0ludCc6ICcqKkludCoqIC0gMzItYml0IHNpZ25lZCBpbnRlZ2VyJyxcbiAgICAgICAgICAnQmlnSW50JzogJyoqQmlnSW50KiogLSA2NC1iaXQgc2lnbmVkIGludGVnZXInLFxuICAgICAgICAgICdGbG9hdCc6ICcqKkZsb2F0KiogLSBGbG9hdGluZyBwb2ludCBudW1iZXInLFxuICAgICAgICAgICdEZWNpbWFsJzogJyoqRGVjaW1hbCoqIC0gSGlnaCBwcmVjaXNpb24gZmxvYXRpbmcgcG9pbnQgbnVtYmVyJyxcbiAgICAgICAgICAnRGF0ZVRpbWUnOiAnKipEYXRlVGltZSoqIC0gVGltZXN0YW1wJyxcbiAgICAgICAgICAnSnNvbic6ICcqKkpzb24qKiAtIEpTT04gb2JqZWN0JyxcbiAgICAgICAgICAnQnl0ZXMnOiAnKipCeXRlcyoqIC0gUmF3IGJ5dGVzIChiaW5hcnkgZGF0YSknLFxuICAgICAgICAgICdhdXRvaW5jcmVtZW50JzogJyoqYXV0b2luY3JlbWVudCgpKiogLSBDcmVhdGVzIGEgc2VxdWVuY2Ugb2YgaW50ZWdlcnMgaW4gdGhlIHVuZGVybHlpbmcgZGF0YWJhc2UnLFxuICAgICAgICAgICdjdWlkJzogJyoqY3VpZCgpKiogLSBHZW5lcmF0ZXMgYSBnbG9iYWxseSB1bmlxdWUgaWRlbnRpZmllciBiYXNlZCBvbiB0aGUgY3VpZCBzcGVjJyxcbiAgICAgICAgICAndXVpZCc6ICcqKnV1aWQoKSoqIC0gR2VuZXJhdGVzIGEgZ2xvYmFsbHkgdW5pcXVlIGlkZW50aWZpZXIgYmFzZWQgb24gdGhlIFVVSUQgc3BlYycsXG4gICAgICAgICAgJ25vdyc6ICcqKm5vdygpKiogLSBTZXRzIGEgdGltZXN0YW1wIG9mIHRoZSB0aW1lIHdoZW4gYSByZWNvcmQgaXMgY3JlYXRlZCdcbiAgICAgICAgfTtcblxuICAgICAgICBpZiAoZG9jdW1lbnRhdGlvblt3b3JkLndvcmRdKSB7XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHJhbmdlOiBuZXcgbW9uYWNvLlJhbmdlKHBvc2l0aW9uLmxpbmVOdW1iZXIsIHdvcmQuc3RhcnRDb2x1bW4sIHBvc2l0aW9uLmxpbmVOdW1iZXIsIHdvcmQuZW5kQ29sdW1uKSxcbiAgICAgICAgICAgIGNvbnRlbnRzOiBbeyB2YWx1ZTogZG9jdW1lbnRhdGlvblt3b3JkLndvcmRdIH1dXG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gUmVtb3ZlZCBhdXRvLXRyaWdnZXIgc3VnZ2VzdGlvbnMgdG8gcHJldmVudCBkdXBsaWNhdGUgc3VnZ2VzdGlvbnNcblxuICAgIC8vIEFkZCBkb2N1bWVudCBmb3JtYXR0aW5nIHByb3ZpZGVyXG4gICAgbW9uYWNvLmxhbmd1YWdlcy5yZWdpc3RlckRvY3VtZW50Rm9ybWF0dGluZ0VkaXRQcm92aWRlcigncHJpc21hJywge1xuICAgICAgcHJvdmlkZURvY3VtZW50Rm9ybWF0dGluZ0VkaXRzOiAobW9kZWw6IGFueSkgPT4ge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IG1vZGVsLmdldFZhbHVlKCk7XG4gICAgICAgIC8vIFNpbXBsZSBQcmlzbWEgZm9ybWF0dGluZyBydWxlc1xuICAgICAgICBjb25zdCBmb3JtYXR0ZWQgPSB2YWx1ZVxuICAgICAgICAgIC5zcGxpdCgnXFxuJylcbiAgICAgICAgICAubWFwKChsaW5lOiBzdHJpbmcpID0+IHtcbiAgICAgICAgICAgIC8vIFJlbW92ZSB0cmFpbGluZyB3aGl0ZXNwYWNlXG4gICAgICAgICAgICBsaW5lID0gbGluZS50cmltRW5kKCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIEhhbmRsZSBpbmRlbnRhdGlvbiBmb3IgbW9kZWwgY29udGVudHNcbiAgICAgICAgICAgIGlmIChsaW5lLnRyaW0oKS5tYXRjaCgvXihpZHxlbWFpbHxuYW1lfHRpdGxlfGNvbnRlbnR8cHVibGlzaGVkfGF1dGhvcnxhdXRob3JJZHxjcmVhdGVkQXR8dXBkYXRlZEF0fHByb3ZpZGVyfHVybClcXHMrLykpIHtcbiAgICAgICAgICAgICAgLy8gRmllbGQgZGVmaW5pdGlvbnMgc2hvdWxkIGJlIGluZGVudGVkIHdpdGggMiBzcGFjZXNcbiAgICAgICAgICAgICAgY29uc3QgdHJpbW1lZCA9IGxpbmUudHJpbSgpO1xuICAgICAgICAgICAgICByZXR1cm4gYCAgJHt0cmltbWVkfWA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIEJsb2NrLWxldmVsIGtleXdvcmRzIHNob3VsZCBub3QgYmUgaW5kZW50ZWRcbiAgICAgICAgICAgIGlmIChsaW5lLnRyaW0oKS5tYXRjaCgvXihtb2RlbHxnZW5lcmF0b3J8ZGF0YXNvdXJjZXxlbnVtKVxccysvKSkge1xuICAgICAgICAgICAgICByZXR1cm4gbGluZS50cmltKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIENsb3NpbmcgYnJhY2VzIHNob3VsZCBub3QgYmUgaW5kZW50ZWRcbiAgICAgICAgICAgIGlmIChsaW5lLnRyaW0oKSA9PT0gJ30nKSB7XG4gICAgICAgICAgICAgIHJldHVybiAnfSc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHJldHVybiBsaW5lO1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLmpvaW4oJ1xcbicpO1xuXG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgcmFuZ2U6IG1vZGVsLmdldEZ1bGxNb2RlbFJhbmdlKCksXG4gICAgICAgICAgICB0ZXh0OiBmb3JtYXR0ZWQsXG4gICAgICAgICAgfSxcbiAgICAgICAgXTtcbiAgICAgIH0sXG4gICAgfSk7XG5cbiAgICAvLyBBZGQgUHJpc21hLXNwZWNpZmljIGNvbW1hbmRzXG4gICAgZWRpdG9yLmFkZEFjdGlvbih7XG4gICAgICBpZDogJ3ByaXNtYS5mb3JtYXQnLFxuICAgICAgbGFiZWw6ICdGb3JtYXQgUHJpc21hIFNjaGVtYScsXG4gICAgICBrZXliaW5kaW5nczogW21vbmFjby5LZXlNb2QuU2hpZnQgfCBtb25hY28uS2V5TW9kLkFsdCB8IG1vbmFjby5LZXlDb2RlLktleUZdLFxuICAgICAgcnVuOiAoKSA9PiB7XG4gICAgICAgIGhhbmRsZUZvcm1hdCgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZUZvcm1hdCA9IGFzeW5jICgpID0+IHtcbiAgICBpZiAoIWVkaXRvclJlZi5jdXJyZW50KSByZXR1cm47XG4gICAgXG4gICAgc2V0SXNGb3JtYXR0aW5nKHRydWUpO1xuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGN1cnJlbnRWYWx1ZSA9IGVkaXRvclJlZi5jdXJyZW50LmdldFZhbHVlKCk7XG4gICAgICBcbiAgICAgIC8vIENhbGwgdGhlIG9mZmljaWFsIFByaXNtYSBmb3JtYXR0ZXIgdmlhIEFQSVxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FwaS9mb3JtYXQtc2NoZW1hJywge1xuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgIH0sXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgc2NoZW1hOiBjdXJyZW50VmFsdWUgfSksXG4gICAgICB9KTtcblxuICAgICAgaWYgKHJlc3BvbnNlLm9rKSB7XG4gICAgICAgIGNvbnN0IHsgZm9ybWF0dGVkU2NoZW1hIH0gPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAgIGVkaXRvclJlZi5jdXJyZW50LnNldFZhbHVlKGZvcm1hdHRlZFNjaGVtYSk7XG4gICAgICAgIG9uQ2hhbmdlKGZvcm1hdHRlZFNjaGVtYSk7XG4gICAgICAgIFxuICAgICAgICAvLyBTaG93IHN1Y2Nlc3MgdG9hc3RcbiAgICAgICAgdG9hc3Qoe1xuICAgICAgICAgIHRpdGxlOiBcIlNjaGVtYSBmb3JtYXR0ZWQgc3VjY2Vzc2Z1bGx5IVwiLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIllvdXIgc2NoZW1hIGhhcyBiZWVuIGZvcm1hdHRlZCB1c2luZyBQcmlzbWEncyBvZmZpY2lhbCBmb3JtYXR0ZXJcIixcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBGYWxsYmFjayB0byBNb25hY28ncyBkb2N1bWVudCBmb3JtYXR0aW5nXG4gICAgICAgIGF3YWl0IGVkaXRvclJlZi5jdXJyZW50LnRyaWdnZXIoJ2Zvcm1hdCcsICdlZGl0b3IuYWN0aW9uLmZvcm1hdERvY3VtZW50Jywge30pO1xuICAgICAgICBcbiAgICAgICAgLy8gU2hvdyBmYWxsYmFjayB3YXJuaW5nXG4gICAgICAgIHRvYXN0KHtcbiAgICAgICAgICB0aXRsZTogXCJTY2hlbWEgZm9ybWF0dGVkIChmYWxsYmFjaylcIixcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJVc2VkIE1vbmFjbyBlZGl0b3IgZm9ybWF0dGluZyBhcyBQcmlzbWEgZm9ybWF0dGVyIHdhcyB1bmF2YWlsYWJsZVwiLFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZm9ybWF0dGluZzonLCBlcnJvcik7XG4gICAgICBcbiAgICAgIC8vIEZhbGxiYWNrIHRvIE1vbmFjbydzIGRvY3VtZW50IGZvcm1hdHRpbmdcbiAgICAgIHRyeSB7XG4gICAgICAgIGF3YWl0IGVkaXRvclJlZi5jdXJyZW50LnRyaWdnZXIoJ2Zvcm1hdCcsICdlZGl0b3IuYWN0aW9uLmZvcm1hdERvY3VtZW50Jywge30pO1xuICAgICAgICBcbiAgICAgICAgLy8gU2hvdyBmYWxsYmFjayB3YXJuaW5nXG4gICAgICAgIHRvYXN0KHtcbiAgICAgICAgICB0aXRsZTogXCJTY2hlbWEgZm9ybWF0dGVkIChmYWxsYmFjaylcIixcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJVc2VkIE1vbmFjbyBlZGl0b3IgZm9ybWF0dGluZyBkdWUgdG8gYW4gZXJyb3Igd2l0aCBQcmlzbWEgZm9ybWF0dGVyXCIsXG4gICAgICAgIH0pO1xuICAgICAgfSBjYXRjaCAoZmFsbGJhY2tFcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdGYWxsYmFjayBmb3JtYXR0aW5nIGZhaWxlZDonLCBmYWxsYmFja0Vycm9yKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFNob3cgZXJyb3IgdG9hc3RcbiAgICAgICAgdG9hc3Qoe1xuICAgICAgICAgIHRpdGxlOiBcIkZvcm1hdHRpbmcgZmFpbGVkXCIsXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiVW5hYmxlIHRvIGZvcm1hdCBzY2hlbWEuIFBsZWFzZSBjaGVjayB5b3VyIHN5bnRheC5cIixcbiAgICAgICAgICB2YXJpYW50OiBcImRlc3RydWN0aXZlXCIsXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0gZmluYWxseSB7XG4gICAgICBzZXRJc0Zvcm1hdHRpbmcoZmFsc2UpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBoYW5kbGVQdXNoVG9EYiA9IGFzeW5jICgpID0+IHtcbiAgICBzZXRJc1B1c2hpbmcodHJ1ZSk7XG4gICAgdHJ5IHtcbiAgICAgIC8vIFNpbXVsYXRlIHB1c2ggdG8gZGF0YWJhc2VcbiAgICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCAyMDAwKSk7XG4gICAgICBzZXRMYXN0UHVzaChuZXcgRGF0ZSgpKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgcHVzaGluZyB0byBkYXRhYmFzZTonLCBlcnJvcik7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHNldElzUHVzaGluZyhmYWxzZSk7XG4gICAgfVxuICB9O1xuXG5cblxuICBpZiAoIWlzTW91bnRlZCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIGgtZnVsbCBiZy1ncmF5LTkwMFwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtY2VudGVyXCI+XG4gICAgICAgICAgPHN2ZyB3aWR0aD1cIjQ4XCIgaGVpZ2h0PVwiNjBcIiB2aWV3Qm94PVwiMCAwIDU4IDcyXCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgY2xhc3NOYW1lPVwibXgtYXV0byBtYi00IGFuaW1hdGUtcHVsc2VcIj5cbiAgICAgICAgICAgIDxwYXRoIGZpbGxSdWxlPVwiZXZlbm9kZFwiIGNsaXBSdWxlPVwiZXZlbm9kZFwiIGQ9XCJNMC41MjI0NzMgNDUuMDkzM0MtMC4xODQxOTEgNDYuMjQ2IC0wLjE3MzI1NCA0Ny43MDA0IDAuNTUwNjY1IDQ4Ljg0MjNMMTMuNjUzNCA2OS41MTE0QzE0LjUwMzggNzAuODUyOSAxNi4xNDI5IDcxLjQ2NDYgMTcuNjY0MiA3MS4wMDgyTDU1LjQ3NTYgNTkuNjY0OEM1Ny41MzkgNTkuMDQ1NyA1OC41NzcyIDU2Ljc0MzkgNTcuNjc1MyA1NC43ODc0TDMzLjM2ODQgMi4wNjAwN0MzMi4xODMgLTAuNTExMzIzIDI4LjYwOTUgLTAuNzIyMzk0IDI3LjEyOTYgMS42OTE1N0wwLjUyMjQ3MyA0NS4wOTMzWk0zMi43MjI1IDE0LjExNDFDMzIuMjA1OSAxMi45MTg3IDMwLjQ1NjUgMTMuMTAyOCAzMC4yMDAxIDE0LjM3OTZMMjAuODQyIDYwLjk3NDlDMjAuNjQ0NyA2MS45NTc0IDIxLjU2NDYgNjIuNzk2NCAyMi41MjQ4IDYyLjUwOThMNDguNjQ5NCA1NC43MTE0QzQ5LjQxMTkgNTQuNDgzOCA0OS44MDQ3IDUzLjY0MTUgNDkuNDg5MSA1Mi45MTExTDMyLjcyMjUgMTQuMTE0MVpcIiBmaWxsPVwid2hpdGVcIi8+XG4gICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1zbSB0ZXh0LWdyYXktNDAwXCI+SW5pdGlhbGl6aW5nIGVkaXRvci4uLjwvcD5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaC1mdWxsIGJnLWdyYXktOTAwXCI+XG4gICAgICB7LyogTGVmdCBTaWRlYmFyICovfVxuICAgICAgPENhcmQgY2xhc3NOYW1lPVwidy0xNiBib3JkZXItciBib3JkZXItZ3JheS03MDAgYmctZ3JheS04MDAgcm91bmRlZC1ub25lIGZsZXggZmxleC1jb2wgaXRlbXMtY2VudGVyIHB5LTQgc3BhY2UteS0zXCI+XG4gICAgICAgIDxCdXR0b25cbiAgICAgICAgICB2YXJpYW50PVwiZ2hvc3RcIlxuICAgICAgICAgIHNpemU9XCJzbVwiXG4gICAgICAgICAgb25DbGljaz17aGFuZGxlUHVzaFRvRGJ9XG4gICAgICAgICAgZGlzYWJsZWQ9e2lzUHVzaGluZ31cbiAgICAgICAgICBjbGFzc05hbWU9XCJ3LTEyIGgtMTIgcC0wIGZsZXggZmxleC1jb2wgaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHRleHQtZ3JheS0zMDAgaG92ZXI6dGV4dC13aGl0ZSBob3ZlcjpiZy1ncmF5LTcwMFwiXG4gICAgICAgICAgdGl0bGU9XCJQdXNoIHNjaGVtYSB0byBkYXRhYmFzZSAocHJpc21hIGRiIHB1c2gpXCJcbiAgICAgICAgPlxuICAgICAgICAgIHtpc1B1c2hpbmcgPyAoXG4gICAgICAgICAgICA8UmVmcmVzaEN3IGNsYXNzTmFtZT1cImgtNCB3LTQgYW5pbWF0ZS1zcGluXCIgLz5cbiAgICAgICAgICApIDogKFxuICAgICAgICAgICAgPERhdGFiYXNlIGNsYXNzTmFtZT1cImgtNCB3LTRcIiAvPlxuICAgICAgICAgICl9XG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwidGV4dC14cyBtdC0xXCI+UHVzaDwvc3Bhbj5cbiAgICAgICAgPC9CdXR0b24+XG5cbiAgICAgICAgPEJ1dHRvblxuICAgICAgICAgIHZhcmlhbnQ9XCJnaG9zdFwiXG4gICAgICAgICAgc2l6ZT1cInNtXCJcbiAgICAgICAgICBvbkNsaWNrPXtoYW5kbGVGb3JtYXR9XG4gICAgICAgICAgZGlzYWJsZWQ9e2lzRm9ybWF0dGluZ31cbiAgICAgICAgICBjbGFzc05hbWU9e2B3LTEyIGgtMTIgcC0wIGZsZXggZmxleC1jb2wgaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHRleHQtZ3JheS0zMDAgaG92ZXI6dGV4dC13aGl0ZSBob3ZlcjpiZy1ncmF5LTcwMCAke1xuICAgICAgICAgICAgaXNGb3JtYXR0aW5nID8gJ2JnLWluZGlnby05MDAvNTAgdGV4dC1pbmRpZ28tMzAwJyA6ICcnXG4gICAgICAgICAgfWB9XG4gICAgICAgICAgdGl0bGU9e2lzRm9ybWF0dGluZyA/IFwiRm9ybWF0dGluZyBzY2hlbWEuLi5cIiA6IFwiRm9ybWF0IHNjaGVtYSAoU2hpZnQrQWx0K0YpXCJ9XG4gICAgICAgID5cbiAgICAgICAgICB7aXNGb3JtYXR0aW5nID8gKFxuICAgICAgICAgICAgPExvYWRlcjIgY2xhc3NOYW1lPVwiaC00IHctNCBhbmltYXRlLXNwaW5cIiAvPlxuICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICA8UGFpbnRCdWNrZXQgY2xhc3NOYW1lPVwiaC00IHctNFwiIC8+XG4gICAgICAgICAgKX1cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ0ZXh0LXhzIG10LTFcIj57aXNGb3JtYXR0aW5nID8gXCIuLi5cIiA6IFwiRm9ybWF0XCJ9PC9zcGFuPlxuICAgICAgICA8L0J1dHRvbj5cblxuICAgICAgICB7bGFzdFB1c2ggJiYgKFxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibXQtNCBmbGV4IGZsZXgtY29sIGl0ZW1zLWNlbnRlclwiPlxuICAgICAgICAgICAgPEJhZGdlIHZhcmlhbnQ9XCJzZWNvbmRhcnlcIiBjbGFzc05hbWU9XCJ0ZXh0LXhzIHJvdGF0ZS05MCB3aGl0ZXNwYWNlLW5vd3JhcCBiZy1ncmF5LTcwMCB0ZXh0LWdyYXktMzAwXCI+XG4gICAgICAgICAgICAgIExhc3QgcHVzaFxuICAgICAgICAgICAgPC9CYWRnZT5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQteHMgdGV4dC1ncmF5LTQwMCBtdC0yIHRyYW5zZm9ybSByb3RhdGUtOTAgd2hpdGVzcGFjZS1ub3dyYXBcIj5cbiAgICAgICAgICAgICAge2xhc3RQdXNoLnRvTG9jYWxlVGltZVN0cmluZygpfVxuICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApfVxuICAgICAgPC9DYXJkPlxuXG4gICAgICB7LyogRWRpdG9yICovfVxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4LTEgZmxleCBmbGV4LWNvbFwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXgtMVwiPlxuICAgICAgICAgIDxFZGl0b3JcbiAgICAgICAgICAgIGhlaWdodD1cIjEwMCVcIlxuICAgICAgICAgICAgbGFuZ3VhZ2U9XCJwcmlzbWFcIlxuICAgICAgICAgICAgdmFsdWU9e3ZhbHVlfVxuICAgICAgICAgICAgb25DaGFuZ2U9eyhuZXdWYWx1ZSkgPT4gb25DaGFuZ2UobmV3VmFsdWUgfHwgJycpfVxuICAgICAgICAgICAgb25Nb3VudD17aGFuZGxlRWRpdG9yRGlkTW91bnR9XG4gICAgICAgICAgICB0aGVtZT1cInByaXNtYS1kYXJrXCJcbiAgICAgICAgICAgIG9wdGlvbnM9e3tcbiAgICAgICAgICAgICAgbWluaW1hcDogeyBlbmFibGVkOiB0cnVlIH0sXG4gICAgICAgICAgICAgIGZvbnRTaXplOiAxNCxcbiAgICAgICAgICAgICAgZm9udEZhbWlseTogXCInSmV0QnJhaW5zIE1vbm8nLCAnRmlyYSBDb2RlJywgJ1NGIE1vbm8nLCBNb25hY28sICdDYXNjYWRpYSBDb2RlJywgJ1JvYm90byBNb25vJywgQ29uc29sYXMsICdDb3VyaWVyIE5ldycsIG1vbm9zcGFjZVwiLFxuICAgICAgICAgICAgICBmb250TGlnYXR1cmVzOiB0cnVlLFxuICAgICAgICAgICAgICBsaW5lTnVtYmVyczogJ29uJyxcbiAgICAgICAgICAgICAgd29yZFdyYXA6ICdvbicsXG4gICAgICAgICAgICAgIGF1dG9tYXRpY0xheW91dDogdHJ1ZSxcbiAgICAgICAgICAgICAgc2Nyb2xsQmV5b25kTGFzdExpbmU6IGZhbHNlLFxuICAgICAgICAgICAgICBwYWRkaW5nOiB7IHRvcDogMTYsIGJvdHRvbTogMTYgfSxcbiAgICAgICAgICAgICAgcmVuZGVyV2hpdGVzcGFjZTogJ3NlbGVjdGlvbicsXG4gICAgICAgICAgICAgIGJyYWNrZXRQYWlyQ29sb3JpemF0aW9uOiB7IGVuYWJsZWQ6IHRydWUgfSxcbiAgICAgICAgICAgICAgZ3VpZGVzOiB7XG4gICAgICAgICAgICAgICAgYnJhY2tldFBhaXJzOiB0cnVlLFxuICAgICAgICAgICAgICAgIGluZGVudGF0aW9uOiB0cnVlLFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBzdWdnZXN0OiB7XG4gICAgICAgICAgICAgICAgc2hvd0tleXdvcmRzOiB0cnVlLFxuICAgICAgICAgICAgICAgIHNob3dTbmlwcGV0czogdHJ1ZSxcbiAgICAgICAgICAgICAgICBzaG93RnVuY3Rpb25zOiB0cnVlLFxuICAgICAgICAgICAgICAgIHNob3dGaWVsZHM6IHRydWUsXG4gICAgICAgICAgICAgICAgc2hvd1ZhcmlhYmxlczogdHJ1ZSxcbiAgICAgICAgICAgICAgICBzaG93Q2xhc3NlczogdHJ1ZSxcbiAgICAgICAgICAgICAgICBzaG93TW9kdWxlczogdHJ1ZSxcbiAgICAgICAgICAgICAgICBzaG93UHJvcGVydGllczogdHJ1ZSxcbiAgICAgICAgICAgICAgICBzaG93RW51bXM6IHRydWUsXG4gICAgICAgICAgICAgICAgc2hvd0VudW1NZW1iZXJzOiB0cnVlLFxuICAgICAgICAgICAgICAgIHNob3dUeXBlUGFyYW1ldGVyczogdHJ1ZSxcbiAgICAgICAgICAgICAgICBzbmlwcGV0c1ByZXZlbnRRdWlja1N1Z2dlc3Rpb25zOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBmaWx0ZXJHcmFjZWZ1bDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBsb2NhbGl0eUJvbnVzOiB0cnVlLFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBxdWlja1N1Z2dlc3Rpb25zOiB7XG4gICAgICAgICAgICAgICAgb3RoZXI6ICdpbmxpbmUnLFxuICAgICAgICAgICAgICAgIGNvbW1lbnRzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBzdHJpbmdzOiBmYWxzZSxcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgcXVpY2tTdWdnZXN0aW9uc0RlbGF5OiAzMDAsXG4gICAgICAgICAgICAgIHBhcmFtZXRlckhpbnRzOiB7IFxuICAgICAgICAgICAgICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgICAgICAgICAgICAgY3ljbGU6IHRydWVcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgYXV0b0Nsb3NpbmdCcmFja2V0czogJ2Fsd2F5cycsXG4gICAgICAgICAgICAgIGF1dG9DbG9zaW5nUXVvdGVzOiAnYWx3YXlzJyxcbiAgICAgICAgICAgICAgYXV0b0luZGVudDogJ2Z1bGwnLFxuICAgICAgICAgICAgICBhY2NlcHRTdWdnZXN0aW9uT25Db21taXRDaGFyYWN0ZXI6IHRydWUsXG4gICAgICAgICAgICAgIGFjY2VwdFN1Z2dlc3Rpb25PbkVudGVyOiAnc21hcnQnLFxuICAgICAgICAgICAgICB0YWJDb21wbGV0aW9uOiAnb24nLFxuICAgICAgICAgICAgICB3b3JkQmFzZWRTdWdnZXN0aW9uczogJ2FsbERvY3VtZW50cycsXG4gICAgICAgICAgICAgIGZvbGRpbmc6IHRydWUsXG4gICAgICAgICAgICAgIGZvbGRpbmdTdHJhdGVneTogJ2luZGVudGF0aW9uJyxcbiAgICAgICAgICAgICAgc2hvd0ZvbGRpbmdDb250cm9sczogJ2Fsd2F5cycsXG4gICAgICAgICAgICAgIG1hdGNoQnJhY2tldHM6ICdhbHdheXMnLFxuICAgICAgICAgICAgICBzZWxlY3Rpb25IaWdobGlnaHQ6IHRydWUsXG4gICAgICAgICAgICAgIG9jY3VycmVuY2VzSGlnaGxpZ2h0OiAnc2luZ2xlRmlsZScsXG4gICAgICAgICAgICAgIGN1cnNvckJsaW5raW5nOiAnYmxpbmsnLFxuICAgICAgICAgICAgICBjdXJzb3JTdHlsZTogJ2xpbmUnLFxuICAgICAgICAgICAgICBzbW9vdGhTY3JvbGxpbmc6IHRydWUsXG4gICAgICAgICAgICAgIHRhYlNpemU6IDIsXG4gICAgICAgICAgICAgIGluc2VydFNwYWNlczogdHJ1ZSxcbiAgICAgICAgICAgICAgZm9ybWF0T25QYXN0ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgZm9ybWF0T25UeXBlOiB0cnVlLFxuICAgICAgICAgICAgICBtdWx0aUN1cnNvck1vZGlmaWVyOiAnY3RybENtZCcsXG4gICAgICAgICAgICAgIG1vdXNlV2hlZWxab29tOiB0cnVlLFxuICAgICAgICAgICAgICBsaW5rZWRFZGl0aW5nOiB0cnVlLFxuICAgICAgICAgICAgICBjb2RlTGVuczogdHJ1ZSxcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFByaXNtYVNjaGVtYUVkaXRvcjtcbiJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZVJlZiIsInVzZUVmZmVjdCIsInVzZVN0YXRlIiwiZHluYW1pYyIsIkJ1dHRvbiIsIkNhcmQiLCJEYXRhYmFzZSIsIlJlZnJlc2hDdyIsIlBhaW50QnVja2V0IiwiTG9hZGVyMiIsIkJhZGdlIiwidXNlVG9hc3QiLCJFZGl0b3IiLCJzc3IiLCJsb2FkaW5nIiwiZGl2IiwiY2xhc3NOYW1lIiwic3ZnIiwid2lkdGgiLCJoZWlnaHQiLCJ2aWV3Qm94IiwiZmlsbCIsInhtbG5zIiwicGF0aCIsImZpbGxSdWxlIiwiY2xpcFJ1bGUiLCJkIiwicCIsIlByaXNtYVNjaGVtYUVkaXRvciIsInZhbHVlIiwib25DaGFuZ2UiLCJlZGl0b3JSZWYiLCJpc0Zvcm1hdHRpbmciLCJzZXRJc0Zvcm1hdHRpbmciLCJpc1B1c2hpbmciLCJzZXRJc1B1c2hpbmciLCJsYXN0UHVzaCIsInNldExhc3RQdXNoIiwiaXNNb3VudGVkIiwic2V0SXNNb3VudGVkIiwiYWlFbmFibGVkIiwic2V0QWlFbmFibGVkIiwiY2FjaGVkU3VnZ2VzdGlvbnMiLCJzZXRDYWNoZWRTdWdnZXN0aW9ucyIsImZldGNoaW5nSW50ZXJ2YWxSZWYiLCJ0aW1lb3V0UmVmIiwidG9hc3QiLCJpc0luc2lkZUJsb2NrIiwibGluZXNCZWZvcmUiLCJjdXJyZW50TGluZSIsImJsb2NrVHlwZSIsIm9wZW5CbG9ja3MiLCJpblRhcmdldEJsb2NrIiwibGluZSIsInRyaW1tZWQiLCJ0cmltIiwic3RhcnRzV2l0aCIsImluY2x1ZGVzIiwiY3VycmVudFRyaW1tZWQiLCJoYW5kbGVFZGl0b3JEaWRNb3VudCIsImVkaXRvciIsIm1vbmFjbyIsImN1cnJlbnQiLCJsYW5ndWFnZXMiLCJyZWdpc3RlciIsImlkIiwic2V0TW9uYXJjaFRva2Vuc1Byb3ZpZGVyIiwidG9rZW5pemVyIiwicm9vdCIsImNvbW1lbnQiLCJzdHJpbmdfZG91YmxlIiwic3RyaW5nX3NpbmdsZSIsImRlZmluZVRoZW1lIiwiYmFzZSIsImluaGVyaXQiLCJydWxlcyIsInRva2VuIiwiZm9yZWdyb3VuZCIsImZvbnRTdHlsZSIsImNvbG9ycyIsInNldFRoZW1lIiwiY29tcGxldGlvblByb3ZpZGVyIiwicmVnaXN0ZXJDb21wbGV0aW9uSXRlbVByb3ZpZGVyIiwidHJpZ2dlckNoYXJhY3RlcnMiLCJwcm92aWRlQ29tcGxldGlvbkl0ZW1zIiwibW9kZWwiLCJwb3NpdGlvbiIsIndvcmQiLCJnZXRXb3JkVW50aWxQb3NpdGlvbiIsInJhbmdlIiwic3RhcnRMaW5lTnVtYmVyIiwibGluZU51bWJlciIsImVuZExpbmVOdW1iZXIiLCJzdGFydENvbHVtbiIsImVuZENvbHVtbiIsImdldExpbmVDb250ZW50IiwiYmVmb3JlQ3Vyc29yIiwic3Vic3RyaW5nIiwiY29sdW1uIiwiYWxsVGV4dCIsImdldFZhbHVlIiwic3BsaXQiLCJzbGljZSIsImlzSW5HZW5lcmF0b3IiLCJpc0luRGF0YXNvdXJjZSIsImlzSW5Nb2RlbCIsImlzSW5FbnVtIiwiaXNBZnRlckF0IiwiZW5kc1dpdGgiLCJpc0ZpZWxkVHlwZSIsInRlc3QiLCJpc1Byb3BlcnR5VmFsdWUiLCJzdWdnZXN0aW9ucyIsInB1c2giLCJsYWJlbCIsImtpbmQiLCJDb21wbGV0aW9uSXRlbUtpbmQiLCJDbGFzcyIsImluc2VydFRleHQiLCJqb2luIiwiaW5zZXJ0VGV4dFJ1bGVzIiwiQ29tcGxldGlvbkl0ZW1JbnNlcnRUZXh0UnVsZSIsIkluc2VydEFzU25pcHBldCIsImRvY3VtZW50YXRpb24iLCJzb3J0VGV4dCIsIk1vZHVsZSIsIkVudW0iLCJWYWx1ZSIsIlByb3BlcnR5IiwibWFwIiwidHlwZSIsIlR5cGVQYXJhbWV0ZXIiLCJGdW5jdGlvbiIsIlNuaXBwZXQiLCJob3ZlclByb3ZpZGVyIiwicmVnaXN0ZXJIb3ZlclByb3ZpZGVyIiwicHJvdmlkZUhvdmVyIiwiZ2V0V29yZEF0UG9zaXRpb24iLCJSYW5nZSIsImNvbnRlbnRzIiwicmVnaXN0ZXJEb2N1bWVudEZvcm1hdHRpbmdFZGl0UHJvdmlkZXIiLCJwcm92aWRlRG9jdW1lbnRGb3JtYXR0aW5nRWRpdHMiLCJmb3JtYXR0ZWQiLCJ0cmltRW5kIiwibWF0Y2giLCJnZXRGdWxsTW9kZWxSYW5nZSIsInRleHQiLCJhZGRBY3Rpb24iLCJrZXliaW5kaW5ncyIsIktleU1vZCIsIlNoaWZ0IiwiQWx0IiwiS2V5Q29kZSIsIktleUYiLCJydW4iLCJoYW5kbGVGb3JtYXQiLCJjdXJyZW50VmFsdWUiLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5Iiwic2NoZW1hIiwib2siLCJmb3JtYXR0ZWRTY2hlbWEiLCJqc29uIiwic2V0VmFsdWUiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwidHJpZ2dlciIsImVycm9yIiwiY29uc29sZSIsImZhbGxiYWNrRXJyb3IiLCJ2YXJpYW50IiwiaGFuZGxlUHVzaFRvRGIiLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiLCJEYXRlIiwic2l6ZSIsIm9uQ2xpY2siLCJkaXNhYmxlZCIsInNwYW4iLCJ0b0xvY2FsZVRpbWVTdHJpbmciLCJsYW5ndWFnZSIsIm5ld1ZhbHVlIiwib25Nb3VudCIsInRoZW1lIiwib3B0aW9ucyIsIm1pbmltYXAiLCJlbmFibGVkIiwiZm9udFNpemUiLCJmb250RmFtaWx5IiwiZm9udExpZ2F0dXJlcyIsImxpbmVOdW1iZXJzIiwid29yZFdyYXAiLCJhdXRvbWF0aWNMYXlvdXQiLCJzY3JvbGxCZXlvbmRMYXN0TGluZSIsInBhZGRpbmciLCJ0b3AiLCJib3R0b20iLCJyZW5kZXJXaGl0ZXNwYWNlIiwiYnJhY2tldFBhaXJDb2xvcml6YXRpb24iLCJndWlkZXMiLCJicmFja2V0UGFpcnMiLCJpbmRlbnRhdGlvbiIsInN1Z2dlc3QiLCJzaG93S2V5d29yZHMiLCJzaG93U25pcHBldHMiLCJzaG93RnVuY3Rpb25zIiwic2hvd0ZpZWxkcyIsInNob3dWYXJpYWJsZXMiLCJzaG93Q2xhc3NlcyIsInNob3dNb2R1bGVzIiwic2hvd1Byb3BlcnRpZXMiLCJzaG93RW51bXMiLCJzaG93RW51bU1lbWJlcnMiLCJzaG93VHlwZVBhcmFtZXRlcnMiLCJzbmlwcGV0c1ByZXZlbnRRdWlja1N1Z2dlc3Rpb25zIiwiZmlsdGVyR3JhY2VmdWwiLCJsb2NhbGl0eUJvbnVzIiwicXVpY2tTdWdnZXN0aW9ucyIsIm90aGVyIiwiY29tbWVudHMiLCJzdHJpbmdzIiwicXVpY2tTdWdnZXN0aW9uc0RlbGF5IiwicGFyYW1ldGVySGludHMiLCJjeWNsZSIsImF1dG9DbG9zaW5nQnJhY2tldHMiLCJhdXRvQ2xvc2luZ1F1b3RlcyIsImF1dG9JbmRlbnQiLCJhY2NlcHRTdWdnZXN0aW9uT25Db21taXRDaGFyYWN0ZXIiLCJhY2NlcHRTdWdnZXN0aW9uT25FbnRlciIsInRhYkNvbXBsZXRpb24iLCJ3b3JkQmFzZWRTdWdnZXN0aW9ucyIsImZvbGRpbmciLCJmb2xkaW5nU3RyYXRlZ3kiLCJzaG93Rm9sZGluZ0NvbnRyb2xzIiwibWF0Y2hCcmFja2V0cyIsInNlbGVjdGlvbkhpZ2hsaWdodCIsIm9jY3VycmVuY2VzSGlnaGxpZ2h0IiwiY3Vyc29yQmxpbmtpbmciLCJjdXJzb3JTdHlsZSIsInNtb290aFNjcm9sbGluZyIsInRhYlNpemUiLCJpbnNlcnRTcGFjZXMiLCJmb3JtYXRPblBhc3RlIiwiZm9ybWF0T25UeXBlIiwibXVsdGlDdXJzb3JNb2RpZmllciIsIm1vdXNlV2hlZWxab29tIiwibGlua2VkRWRpdGluZyIsImNvZGVMZW5zIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/PrismaSchemaEditor.tsx\n"));

/***/ })

});